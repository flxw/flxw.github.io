[


  
    
    {
      "title": "What the patch?!",
      "permalink": "https://flxw.de/what-the-patch.html",
      "link": "https://flxw.de/what-the-patch.html",
      "date": "2021-06-16T00:00:00-07:00",
      
        "modified": "2022-10-22T06:05:10-07:00",
      
      "author": {
        "name": "Felix Wolff",
        "url": "https://flxw.de/",
        "email": "wolff.felix@proton.me"
      },
      "content": "<p>At work I deal with Kubernetes and kustomize on a daily basis.\nToday I have pulled my hair about how I could patch a value in a job that was included in the base kustomization.\nI knew that there were several ways to do it, and I realized that I could not tell the difference between <code class=\"language-plaintext highlighter-rouge\">patches</code>, <code class=\"language-plaintext highlighter-rouge\">patchesJson6902</code> and <code class=\"language-plaintext highlighter-rouge\">patchesStrategicMerge</code>.</p>\n\n<p>It turns out that the three directives can be regarded as variations of the same patching mechanism.\nThey differ in terms of customizability, and hence the number of things you can do (and break) with them.\nTo me, the hierarchy feels as follows, starting with the least versatile and powerful directive:</p>\n<ol>\n  <li><code class=\"language-plaintext highlighter-rouge\">patchesStrategicMerge</code></li>\n  <li><code class=\"language-plaintext highlighter-rouge\">patchesJson6902</code></li>\n  <li><code class=\"language-plaintext highlighter-rouge\">patches</code></li>\n</ol>\n\n<hr />\n\n<p>Why is <code class=\"language-plaintext highlighter-rouge\">patchesStrategicMerge</code> the least powerful and versatile?\nBecause it’s simple! Try to use it, the reviewers will be thankful.</p>\n\n<p>Check the <a href=\"https://github.com/kubernetes-sigs/cli-experimental/blob/e8661e62fbff9bb41703e663c5d6f9730f121a16/site/content/en/references/kustomize/kustomization/patchesStrategicMerge/_index.md\">documentation here</a>.\nIt tells us that <em>each patch should be either a relative file path or an inline content resolving to a partial or complete resource definition</em>. \nThat means these patches do what we are used to from git, for example. \nThey patch a single thing, so are ideal for correcting environment variables, names, paths, and the likes.</p>\n\n<hr />\n\n<p>It turns out that the <code class=\"language-plaintext highlighter-rouge\">patchJson6902</code> directive is an older keyword, that must also target a specific resource,\nbut can deliver more complex operations on the patch target.\nThese operations are specified in the JSON6902 format, hence the name.\nThe actual patch is delivered via JSON (but can also be YAML), for instance like below.\nMore examples can be found in the <a href=\"https://github.com/kubernetes-sigs/cli-experimental/blob/e8661e62fbff9bb41703e663c5d6f9730f121a16/site/content/en/references/kustomize/kustomization/patchesjson6902/_index.md\">documentation</a>.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-json\" data-lang=\"json\"><span class=\"p\">[</span><span class=\"w\">\n  </span><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"nl\">\"op\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"remove\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"path\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"/spec/template/spec/containers/0/env/0/valueFrom\"</span><span class=\"w\">\n  </span><span class=\"p\">},</span><span class=\"w\">\n  </span><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"nl\">\"op\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"add\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"path\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"/spec/template/spec/containers/0/env/0/value\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"value\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"SOMEVALUE\"</span><span class=\"w\">\n  </span><span class=\"p\">}</span><span class=\"w\">\n</span><span class=\"p\">]</span></code></pre></figure>\n\n<p>Finally, the <code class=\"language-plaintext highlighter-rouge\">patches</code> directive is the new shiny swiss army knife.\nIt needs a target, too, but the target can be a <em>regex</em>.\nThe patch instructions are delivered in the JSON6902 format introduced above.\nIn short, this directive allows you to patch multiple targets using complex operations all in a single directive.\nTruly powerful, and truly tricky to review.\nYou can find the <a href=\"https://github.com/kubernetes-sigs/cli-experimental/blob/e8661e62fbff9bb41703e663c5d6f9730f121a16/site/content/en/references/kustomize/kustomization/patches/_index.md\">whole documention for this directive here</a>.</p>\n\n<h3 id=\"sources\">Sources</h3>\n<ul>\n  <li>https://github.com/kubernetes-sigs/kustomize/issues/2705</li>\n  <li>https://stackoverflow.com/questions/63604579/what-is-the-difference-between-patches-vs-patchesjson6902-in-kustomize</li>\n</ul>",
      "excerpt": "At work I deal with Kubernetes and kustomize on a daily basis.\nToday I have pulled my hair about how I could patch a value in a job that was included in the base kustomization.\nI knew that there were several ways to do it, and I realized that I could not tell the difference between patches, patchesJson6902 and patchesStrategicMerge.",
      "languages": null,
      "categories": ["blog"],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "A beancount tutorial and framework",
      "permalink": "https://flxw.de/a-beancount-tutorial-and-framework.html",
      "link": "https://flxw.de/a-beancount-tutorial-and-framework.html",
      "date": "2021-02-28T00:00:00-08:00",
      
        "modified": "2022-10-22T06:05:10-07:00",
      
      "author": {
        "name": "Felix Wolff",
        "url": "https://flxw.de/",
        "email": "wolff.felix@proton.me"
      },
      "content": "<p>As a financially avid reader, I am sure that you can roughly say how much money you need for a month.\nYou can assist your gut feeling with tools like Kmymoney, Homebank, GnuCash et al. to know exactly how much it is that you spend and earn per month.\nHowever, the aforementioned tools have a common shortcoming, at least in my opinion:\nThey use different data formats to store data.\nIf the software reaches end of life, you could lose months or even years of transactional data because you might not be able to extract it from the old storage format.</p>\n\n<p>Enter <a href=\"https://plaintextaccounting.org/\">Plain Text Accounting</a> (PTA).\nA text file will store your transactions using a well-defined format.\nNo matter what happens to the analytics software, you will always be able to manipulate and convert from text - solving the problem above.</p>\n\n<p>PTA tools tend to be designed for the command line, which can be somewhat counter-intuitive if you expect graphs and visualizations of the GUI tools.\nIn this article I will show you how to easily work with <a href=\"https://beancount.github.io/\">beancount</a> and visualize your numbers nicely.</p>\n\n<h1 id=\"directory-setup\">Directory setup</h1>\n<p>First, you install <a href=\"https://beancount.github.io/\">beancount</a> from any source that works for your system.</p>\n\n<p>Second, create a file and folder structure like so:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-shell\" data-lang=\"shell\">importers/\nraw/\nmain.beancount\nimport.config</code></pre></figure>\n\n<p>Third, open <code class=\"language-plaintext highlighter-rouge\">main.beancount</code> and open some accounts. You can use <a href=\"https://docs.google.com/document/d/1Tss0IEzEyAPuKSGeNsfNgb0BfiW2ZHyP5nCFBW1uWlk\">this article</a> as a guide. It doesn’t have to be perfect from the start, you can always retry.</p>\n\n<p>Fourth, create folders for your bank accounts inside <code class=\"language-plaintext highlighter-rouge\">raw</code> and create empty beanfiles for them.</p>\n\n<p>Fifth, use the <code class=\"language-plaintext highlighter-rouge\">include</code> command inside <code class=\"language-plaintext highlighter-rouge\">main.beancount</code> to pull in the account-specific beanfiles your just created.</p>\n\n<p>If you’re like me, you have two accounts where money shuttle back and forth. Then you would have a folder structure similar to the following:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-shell\" data-lang=\"shell\">import.config\nimporters/\nmain.beancount\nn26.beancount\nsparkasse.beancount\nraw\n ├── N26\n └── Sparkasse               </code></pre></figure>\n\n<h1 id=\"importer-setup\">Importer setup</h1>\n<p>As mentioned in the introduction, I perceive the big strength of PTA that you can process anything.\nFor this job, beancount offers a so-called <a href=\"https://beancount.github.io/docs/importing_external_data.html#example-importers\">Importer API</a>.\nYou can either write your own Python importer or copy and expand on one from Github.\nI used the following two in my projects:</p>\n<ul>\n  <li>https://gitlab.hasi.it/seth/beancount-csv-camt</li>\n  <li>https://github.com/siddhantgoel/beancount-n26</li>\n</ul>\n\n<p>Either install the importer via <code class=\"language-plaintext highlighter-rouge\">pip</code> or make it importable for Python from the <code class=\"language-plaintext highlighter-rouge\">importers/</code> directory.\nIt will process your input files line-by-line and create the appropriate accountin entries.</p>\n\n<p>After having found and configured an importer, you can wire it up quite easily in <code class=\"language-plaintext highlighter-rouge\">import.config</code>. Here is how it looks for me:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n<span class=\"kn\">from</span> <span class=\"nn\">os</span> <span class=\"kn\">import</span> <span class=\"n\">path</span>\n<span class=\"n\">sys</span><span class=\"p\">.</span><span class=\"n\">path</span><span class=\"p\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"p\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">.</span><span class=\"n\">dirname</span><span class=\"p\">(</span><span class=\"n\">__file__</span><span class=\"p\">)))</span> \n\n<span class=\"kn\">from</span> <span class=\"nn\">importers.n26</span> <span class=\"kn\">import</span> <span class=\"n\">N26Importer</span>\n<span class=\"kn\">from</span> <span class=\"nn\">importers.csv_camt</span> <span class=\"kn\">import</span> <span class=\"n\">CsvCamtImporter</span>\n\n<span class=\"n\">CONFIG</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"n\">N26Importer</span><span class=\"p\">(</span>\n        <span class=\"s\">'XXXXXXMYIBANXXXXXXXXX'</span><span class=\"p\">,</span>\n        <span class=\"s\">'Assets:N26'</span><span class=\"p\">,</span>\n        <span class=\"n\">language</span><span class=\"o\">=</span><span class=\"s\">'de'</span><span class=\"p\">,</span>\n        <span class=\"n\">file_encoding</span><span class=\"o\">=</span><span class=\"s\">'utf-8'</span><span class=\"p\">,</span>\n    <span class=\"p\">),</span>\n    <span class=\"n\">CsvCamtImporter</span><span class=\"p\">(</span>\n        <span class=\"s\">'XXXXXXMYIBAN2XXXXXXXX'</span><span class=\"p\">,</span>\n        <span class=\"s\">'Assets:Sparkasse'</span>\n    <span class=\"p\">)</span>\n<span class=\"p\">]</span></code></pre></figure>\n\n<p>This tells beancount the following:\n“Please use these two importers when importing transactions.\nThe importers will tell you whether they are capable of importing a given file, so the right one will get selected automatically.”</p>\n\n<h1 id=\"data-ingestion\">Data ingestion</h1>\n<p>A month has passed while you tried to set this up, so now you have a month’s worth of data ;-)</p>\n\n<p>Download it as CSV, and save it under <code class=\"language-plaintext highlighter-rouge\">raw/n26-01-21.csv</code>.\nThen, you can append the plain text ledger to the <code class=\"language-plaintext highlighter-rouge\">n26.beancount</code> file:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-shell\" data-lang=\"shell\">bean-extract import.config raw/n26-01-21.csv <span class=\"o\">&gt;&gt;</span> n26.beancount</code></pre></figure>\n\n<p>I recommend checking the output in the beginning, as categories could be wrong. Maybe you notice some patterns that can help you automatically categorize transactions inside the importer. I did that and it saves quite a bit of work.</p>\n\n<h1 id=\"data-visualization\">Data visualization</h1>\n<p>Here is why I picked beancount: <a href=\"https://beancount.github.io/fava/\">fava</a>.\nIt’s a great visualization frontend for beancount ledgers. After adding a month’s worth of data, I just fire it up and can analyze what happened.</p>\n\n<p>If you’d like to do so, too, simply install it and run:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-shell\" data-lang=\"shell\">fava main.beancount</code></pre></figure>",
      "excerpt": "As a financially avid reader, I am sure that you can roughly say how much money you need for a month.\nYou can assist your gut feeling with tools like Kmymoney, Homebank, GnuCash et al. to know exactly how much it is that you spend and earn per month.\nHowever, the aforementioned tools have a common shortcoming, at least in my opinion:\nThey use different data formats to store data.\nIf the software reaches end of life, you could lose months or even years of transactional data because you might not be able to extract it from the old storage format.",
      "languages": null,
      "categories": ["blog"],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "Tracking your money made easy",
      "permalink": "https://flxw.de/tracking-finances-made-easy.html",
      "link": "https://flxw.de/tracking-finances-made-easy.html",
      "date": "2020-12-26T00:00:00-08:00",
      
        "modified": "2022-10-22T06:05:10-07:00",
      
      "author": {
        "name": "Felix Wolff",
        "url": "https://flxw.de/",
        "email": "wolff.felix@proton.me"
      },
      "content": "<p>A couple of years ago, I started getting more and more into understanding how the financial system works,\nwhat inflation is, what the central banks do, etc, pp.\nFinally I ended getting a lot more thorough in terms of looking into where my money and time goes.\nI would like to highlight the account structure and the two tools I have been using every since in this article.\nI believe that the whole setup is fairly simple and can be used by anybody, so I would like to share it.\nFor every piece of the two-part system, I will first give a general description and then a bit of detail how I do it.</p>\n\n<p>It is based on a few assumptions:</p>\n<ol>\n  <li>You got one or more bank accounts that you use mainly for spending.</li>\n  <li>It is possible to export the transactions from these accounts as CSV</li>\n  <li>The saved money goes onto the security accounts for later investing or just storage</li>\n  <li>You have one or more security accounts and checking accounts associated with them, and these accounts are only used for buying/selling securities</li>\n</ol>\n\n<p>What comes out of this is what I call a cashflow system.\nIf you have read Robert Kiyosakis <em>Rich Dad, Poor Dad</em>, you know what I am referring to.\nIf not or you need a refresher, just google <em>Cashflow Quadrant</em>.</p>\n\n<h1 id=\"what-a-cashflow-system-could-look-like\">What a cashflow system could look like</h1>\n<p>What I described in general terms above looks like this for me:</p>\n\n<p><img src=\"/assets/cashflow-system.jpg\" alt=\"\" /></p>\n\n<p>The income goes to an account that I refer to as <em>reserve account</em>.\nIt always holds 2-3 salaries that should only be touched as a last resort, e.g. when I lose my job or something serious happens.\nThe <em>reserve</em> feeds money onto my <em>budget account</em> for daily expenses on a monthly basis.\nWhat’s left of the income goes onto the deposit account for later investing.</p>\n\n<p>Generally speaking, there are two categories here: spending and investing.<br />\n<strong>Category I</strong> is about spending. There will be high volume of spendtransactions, because I like to have every penny tracked and pay as little as possible with cash.\nThat’s also why the CSV export is so important - you do not want to enter this by hand.\nThis will be covered in the first part.<br />\n<strong>Category II</strong> is about tracking your net worth. It’s separate because it is irrelevant for spend analysis and the volume of transactions is comparably small.\nIt will be covered in the second part.</p>\n\n<h1 id=\"step-1-spend-analysis\">Step 1: Spend analysis</h1>\n<p><strong>The tool:</strong>\nWith <a href=\"https://kmymoney.org/\">kmymoney</a>, it is possible to analyze your transactions in detail and categorize them easily.\nWhy am I recommending this instead of moneydance, homebank, lime and all the others?\nSimple: CSV IMPORT AND MULTIPLE ACCOUNTS! These are simple but vital features that save you time and headache :)\nYou can even track securities and investments in kmymoney but I wouldn’t recommend doing so.</p>\n\n<p>Just import your CSV exports from your spending accounts there, enter the categories for the transactions and reconcile the amounts.\nThen you can directly analyze your spend.</p>\n\n<p><strong>How I use it:</strong>\nAt the end of every month, I save the CSV exports from the accounts on my machine and import them into kmymoney.\nAfter checking the categories and reconciling the final account balances, I can check the analysis.\nWhat’s especially important to me is the savings rate, i.e. how much of my income was not spent.</p>\n\n<p>Tip #1: Do not delete the exports. They contain nice data that you can use to migrate to a different software later and keep all history.<br />\nTip #2: Have the categorization done by your bank, this is why I went with N26 a few years ago.</p>\n\n<p>I have recently begun to explore <a href=\"http://furius.ca/beancount/\">beancount</a> as an alternative because the work of reconciliating accounts and transactions between my accounts became too monotonous.\nIn combination with <a href=\"https://beancount.github.io/fava/\">Fava</a>, the UI is quite nice.\nIt allows me to automate the whole CSV processing without needing to reconciliate a few transactions that went onto the wrong account.\nThe setup is very time-consuming though, so I will always recommend <em>kmymoney</em> first.</p>\n\n<h1 id=\"step-2-security-analysis\">Step 2: Security analysis</h1>\n<p><strong>The tool:</strong>\nNow that you know your savings rate and main cost drivers, you can think about what you want to do with the rest of the money.\nMost likely you will buy something instead of leaving the money on some account, having it succumb to inflation.\nI found <a href=\"https://www.portfolio-performance.info/\">Portfolio Performance</a> to be super easy to use and have very useful features.\nThe best is arguable the auto-update of stock prices - nowhere else have I seen it this easy.</p>\n\n<p>To track something, just enter the price, fees and taxes associated with your transaction.\nThat’s why the expected low volume of transactions mentioned above is key for this approach.\nThe nice thing is that you needn’t track stocks.\nThe software allows you to create any category, so you could also see your worth in houses or cars.\nAnything that’s not on the budget or reserve accounts should be in here.</p>\n\n<p>Just download the software.\nThere are example files included that give you an idea of what you could do or track with it.</p>\n\n<p><strong>How I use it:</strong>\nAfter setting up the spend analysis, I put in the security transactions for the month.\nPortfolio Performance allows me to easily check my asset allocation, so I can rebalance or adjust if necessary.</p>\n\n<h1 id=\"verdict\">Verdict</h1>\n<p>This article showed you how to structure your accounts into income/expense accounts and the tools to track accordingly.\nWhat is a flaw, in my opinion, is that there is never a complete picture of your accounts.\nPortfolio performance doesn’t know about the expenses in kmymoney and vice versa.</p>\n\n<p>I do not believe that this is a huge problem, however.\nIf you look at it, there should only ever be 2-4 months of salary inside the spend analysis.\nThe majority of your money should be somewhere in the security analysis.\nWith the level of transparency that you get here, I believe that it is a small price to always add 3x your salary onto the number that Portfolio Performance gives you.</p>\n\n<p>Thanks for reading the first post since five years!\nIf you have any comments, please reach out to me via the contact details on the landing page!</p>",
      "excerpt": "A couple of years ago, I started getting more and more into understanding how the financial system works,\nwhat inflation is, what the central banks do, etc, pp.\nFinally I ended getting a lot more thorough in terms of looking into where my money and time goes.\nI would like to highlight the account structure and the two tools I have been using every since in this article.\nI believe that the whole setup is fairly simple and can be used by anybody, so I would like to share it.\nFor every piece of the two-part system, I will first give a general description and then a bit of detail how I do it.",
      "languages": null,
      "categories": ["blog"],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "Quick Start Guide",
      "permalink": "https://flxw.de/quick-start.html",
      "link": "https://flxw.de/quick-start.html",
      "date": "2017-07-21T00:00:00-07:00",
      
        "modified": "2022-10-22T06:05:10-07:00",
      
      "author": {
        "name": "Felix Wolff",
        "url": "https://flxw.de/",
        "email": "wolff.felix@proton.me"
      },
      "content": "<script async=\"\" defer=\"\" src=\"https://buttons.github.io/buttons.js\"></script>\n\n<p align=\"center\">\n  <img src=\"https://deadbeef.me/paper-jekyll-theme/assets/paper-cover-photo.png\" />\n  <p align=\"center\">\n     A minimalistic Jekyll Theme\n     <br />\n     <br />\n     <a class=\"no-hov\" href=\"https://travis-ci.org/mkchoi212/paper-jekyll-theme\"><img src=\"https://travis-ci.org/mkchoi212/paper-jekyll-theme.svg?branch=master\" /></a>\n     <a class=\"no-hov\" href=\"https://raw.githubusercontent.com/mkchoi212/paper-jekyll-theme/master/LICENSE\"><img src=\"https://img.shields.io/badge/license-MIT-blue.svg\" /></a>\n     <br /><br />\n     <a class=\"github-button\" href=\"https://github.com/mkchoi212/paper-jekyll-theme\" data-size=\"large\" data-show-count=\"true\" aria-label=\"Star mkchoi212/paper-jekyll-theme on GitHub\">Stars</a>\n  </p>\n</p>\n<p><br /></p>\n\n<p>Paper is a minimal Jekyll theme. Perfect for hosting your personal site, blog, or portfolio on GitHub or self-hosting on your own server. The styling is purposely minimalistic so that you can add your own flare to the website.</p>\n\n<p>I’m currently using this theme on my <a href=\"https://www.deadbeef.me\">personal blog</a>.</p>\n\n<h2 id=\"features\">Features</h2>\n<ul>\n  <li>Compatible with Jekyll 3.x and Github Pages</li>\n  <li>Live local reloading for faster development</li>\n  <li><strong>Responsive layout</strong> built-in</li>\n  <li>Supports Jekyll’s built-in Sass/SCSS preprocessor</li>\n  <li>Supports <strong>Google Analytics</strong></li>\n  <li>Supports <strong>Disqus</strong> for commenting</li>\n  <li>Minimum Dependencies</li>\n  <li>Rakefile for automation\n    <ul>\n      <li><code class=\"language-plaintext highlighter-rouge\">rake check</code>    - Check links/html files of the generated site</li>\n      <li><code class=\"language-plaintext highlighter-rouge\">rake clean</code>    - Clean up generated site</li>\n      <li><code class=\"language-plaintext highlighter-rouge\">rake post</code>     - Begin a new post in <code class=\"language-plaintext highlighter-rouge\">./_posts</code></li>\n      <li><code class=\"language-plaintext highlighter-rouge\">rake preview</code>  - Preview with livereload on local machine</li>\n    </ul>\n  </li>\n</ul>\n\n<h2 id=\"usage\">Usage</h2>\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>git clone https://github.com/mkchoi212/paper-jekyll-theme.git\nbundle install\nrake preview\n</code></pre></div></div>\n\n<p>Then, go to your favorite brower and type in the address <code class=\"language-plaintext highlighter-rouge\">http://127.0.0.1:YOUR_PORT_NUM_HERE</code> to preview your website.</p>\n\n<h3 id=\"customization\">Customization</h3>\n<p>To customize various details - title/description of the website, your SNS accout names, etc - edit the <code class=\"language-plaintext highlighter-rouge\">_config.yml</code> file.</p>\n\n<h3 id=\"adding-posts\">Adding posts</h3>\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>rake post title=\"A Title\" [date=\"2012-02-09\"] [tags=[tag1,tag2]] [category=\"category\"]\n</code></pre></div></div>\n<p>This will create a markdown file in the default folder where all posts are stored in Jekyll; <code class=\"language-plaintext highlighter-rouge\">_post</code>.</p>\n\n<p>If you wish to <strong>change the directory where posts are saved</strong>, go to the <code class=\"language-plaintext highlighter-rouge\">Rakefile</code> and edit the <code class=\"language-plaintext highlighter-rouge\">CONFIG = { 'posts': CUSTOM_PATH_HERE }</code>. This will allow <code class=\"language-plaintext highlighter-rouge\">rake post</code> to know where to save the new posts to.</p>\n\n<p>The <strong>drafts</strong> you are working on can be saved in the <code class=\"language-plaintext highlighter-rouge\">_drafts</code> directory. When you push your code to the server, files in this directory will NOT be included to the list o posts.</p>\n\n<h1 id=\"licnese\">Licnese</h1>\n<p>The MIT License (MIT)</p>\n\n<p>Copyright (c) 2017 Mike JS. Choi</p>\n\n<p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p>\n\n<p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p>\n\n<p>THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>",
      "excerpt": "",
      "languages": null,
      "categories": ["blog"],
      "tags": ["jekyll"]
    }
    
  

  
    ,
    {
      "title": "Syntax Highlighting Post",
      "permalink": "https://flxw.de/code-highlighting.html",
      "link": "https://flxw.de/code-highlighting.html",
      "date": "2017-07-20T00:00:00-07:00",
      
        "modified": "2022-10-22T06:05:10-07:00",
      
      "author": {
        "name": "Felix Wolff",
        "url": "https://flxw.de/",
        "email": "wolff.felix@proton.me"
      },
      "content": "<p>Syntax highlighting is a feature that displays source code, in different colors and fonts according to the category of terms. This feature facilitates writing in a structured language such as a programming language or a markup language as both structures and syntax errors are visually distinct. Highlighting does not affect the meaning of the text itself; it is intended only for human readers.<sup id=\"fnref:1\" role=\"doc-noteref\"><a href=\"#fn:1\" class=\"footnote\" rel=\"footnote\">1</a></sup></p>\n\n<h3 id=\"highlighted-code-blocks\">Highlighted Code Blocks</h3>\n\n<p>To modify styling and highlight colors edit <code class=\"language-plaintext highlighter-rouge\">/_sass/_highlighter.scss</code>.</p>\n\n<div class=\"language-css highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nf\">#container</span> <span class=\"p\">{</span>\n    <span class=\"nl\">float</span><span class=\"p\">:</span> <span class=\"nb\">left</span><span class=\"p\">;</span>\n    <span class=\"nl\">margin</span><span class=\"p\">:</span> <span class=\"m\">0</span> <span class=\"m\">-240px</span> <span class=\"m\">0</span> <span class=\"m\">0</span><span class=\"p\">;</span>\n    <span class=\"nl\">width</span><span class=\"p\">:</span> <span class=\"m\">100%</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;nav</span> <span class=\"na\">class=</span><span class=\"s\">\"pagination\"</span> <span class=\"na\">role=</span><span class=\"s\">\"navigation\"</span><span class=\"nt\">&gt;</span>\n    {% if page.previous %}\n        <span class=\"nt\">&lt;a</span> <span class=\"na\">href=</span><span class=\"s\">\"{{ site.url }}{{ page.previous.url }}\"</span> <span class=\"na\">class=</span><span class=\"s\">\"btn\"</span> <span class=\"na\">title=</span><span class=\"s\">\"{{ page.previous.title }}\"</span><span class=\"nt\">&gt;</span>Previous article<span class=\"nt\">&lt;/a&gt;</span>\n    {% endif %}\n    {% if page.next %}\n        <span class=\"nt\">&lt;a</span> <span class=\"na\">href=</span><span class=\"s\">\"{{ site.url }}{{ page.next.url }}\"</span> <span class=\"na\">class=</span><span class=\"s\">\"btn\"</span> <span class=\"na\">title=</span><span class=\"s\">\"{{ page.next.title }}\"</span><span class=\"nt\">&gt;</span>Next article<span class=\"nt\">&lt;/a&gt;</span>\n    {% endif %}\n<span class=\"nt\">&lt;/nav&gt;</span><span class=\"c\">&lt;!-- /.pagination --&gt;</span>\n</code></pre></div></div>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">module</span> <span class=\"nn\">Jekyll</span>\n  <span class=\"k\">class</span> <span class=\"nc\">TagIndex</span> <span class=\"o\">&lt;</span> <span class=\"no\">Page</span>\n    <span class=\"k\">def</span> <span class=\"nf\">initialize</span><span class=\"p\">(</span><span class=\"n\">site</span><span class=\"p\">,</span> <span class=\"n\">base</span><span class=\"p\">,</span> <span class=\"n\">dir</span><span class=\"p\">,</span> <span class=\"n\">tag</span><span class=\"p\">)</span>\n      <span class=\"vi\">@site</span> <span class=\"o\">=</span> <span class=\"n\">site</span>\n      <span class=\"vi\">@base</span> <span class=\"o\">=</span> <span class=\"n\">base</span>\n      <span class=\"vi\">@dir</span> <span class=\"o\">=</span> <span class=\"n\">dir</span>\n      <span class=\"vi\">@name</span> <span class=\"o\">=</span> <span class=\"s1\">'index.html'</span>\n      <span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nf\">process</span><span class=\"p\">(</span><span class=\"vi\">@name</span><span class=\"p\">)</span>\n      <span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nf\">read_yaml</span><span class=\"p\">(</span><span class=\"no\">File</span><span class=\"p\">.</span><span class=\"nf\">join</span><span class=\"p\">(</span><span class=\"n\">base</span><span class=\"p\">,</span> <span class=\"s1\">'_layouts'</span><span class=\"p\">),</span> <span class=\"s1\">'tag_index.html'</span><span class=\"p\">)</span>\n      <span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nf\">data</span><span class=\"p\">[</span><span class=\"s1\">'tag'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">tag</span>\n      <span class=\"n\">tag_title_prefix</span> <span class=\"o\">=</span> <span class=\"n\">site</span><span class=\"p\">.</span><span class=\"nf\">config</span><span class=\"p\">[</span><span class=\"s1\">'tag_title_prefix'</span><span class=\"p\">]</span> <span class=\"o\">||</span> <span class=\"s1\">'Tagged: '</span>\n      <span class=\"n\">tag_title_suffix</span> <span class=\"o\">=</span> <span class=\"n\">site</span><span class=\"p\">.</span><span class=\"nf\">config</span><span class=\"p\">[</span><span class=\"s1\">'tag_title_suffix'</span><span class=\"p\">]</span> <span class=\"o\">||</span> <span class=\"s1\">'&amp;#8211;'</span>\n      <span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nf\">data</span><span class=\"p\">[</span><span class=\"s1\">'title'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">\"</span><span class=\"si\">#{</span><span class=\"n\">tag_title_prefix</span><span class=\"si\">}#{</span><span class=\"n\">tag</span><span class=\"si\">}</span><span class=\"s2\">\"</span>\n      <span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nf\">data</span><span class=\"p\">[</span><span class=\"s1\">'description'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">\"An archive of posts tagged </span><span class=\"si\">#{</span><span class=\"n\">tag</span><span class=\"si\">}</span><span class=\"s2\">.\"</span>\n    <span class=\"k\">end</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n</code></pre></div></div>\n\n<h3 id=\"standard-code-block\">Standard Code Block</h3>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>&lt;nav class=\"pagination\" role=\"navigation\"&gt;\n    {% if page.previous %}\n        &lt;a href=\"{{ site.url }}{{ page.previous.url }}\" class=\"btn\" title=\"{{ page.previous.title }}\"&gt;Previous article&lt;/a&gt;\n    {% endif %}\n    {% if page.next %}\n        &lt;a href=\"{{ site.url }}{{ page.next.url }}\" class=\"btn\" title=\"{{ page.next.title }}\"&gt;Next article&lt;/a&gt;\n    {% endif %}\n&lt;/nav&gt;&lt;!-- /.pagination --&gt;\n</code></pre></div></div>\n\n<h3 id=\"github-gist-embed\">GitHub Gist Embed</h3>\n\n<p>An example of a Gist embed below.</p>\n\n<script src=\"https://gist.github.com/mmistakes/43a355923921d22cd993.js\"></script>\n\n<div class=\"footnotes\" role=\"doc-endnotes\">\n  <ol>\n    <li id=\"fn:1\" role=\"doc-endnote\">\n      <p><a href=\"http://en.wikipedia.org/wiki/Syntax_highlighting\">http://en.wikipedia.org/wiki/Syntax_highlighting</a> <a href=\"#fnref:1\" class=\"reversefootnote\" role=\"doc-backlink\">&#8617;&#xfe0e;</a></p>\n    </li>\n  </ol>\n</div>",
      "excerpt": "Syntax highlighting is a feature that displays source code, in different colors and fonts according to the category of terms. This feature facilitates writing in a structured language such as a programming language or a markup language as both structures and syntax errors are visually distinct. Highlighting does not affect the meaning of the text itself; it is intended only for human readers.1\n\n\n  \n    \n      http://en.wikipedia.org/wiki/Syntax_highlighting &#8617;&#xfe0e;",
      "languages": null,
      "categories": ["blog"],
      "tags": ["sample","post,","code,","highlighting"]
    }
    
  

  
    ,
    {
      "title": "Upgrading Guide: v1.1.0",
      "permalink": "https://flxw.de/upgrading-guide-v1.1.0.html",
      "link": "https://flxw.de/upgrading-guide-v1.1.0.html",
      "date": "2017-01-07T00:00:00-08:00",
      
        "modified": "2022-10-22T06:05:10-07:00",
      
      "author": {
        "name": "Felix Wolff",
        "url": "https://flxw.de/",
        "email": "wolff.felix@proton.me"
      },
      "content": "<p>There’re some significant changes in update v1.1.0, action required after you upgrade Almace Scaffolding.</p>\n\n<p>In your front-matter fields:</p>\n\n<ul>\n  <li>Replace all <code class=\"language-plaintext highlighter-rouge\">svg-headline</code>, <code class=\"language-plaintext highlighter-rouge\">img-headline</code> with <code class=\"language-plaintext highlighter-rouge\">heading-img</code>.</li>\n  <li>Replace all <code class=\"language-plaintext highlighter-rouge\">svg-headline-width</code>, <code class=\"language-plaintext highlighter-rouge\">img-headline-width</code> with <code class=\"language-plaintext highlighter-rouge\">heading-img-width</code>.</li>\n  <li>Remove all <code class=\"language-plaintext highlighter-rouge\">svg-headline-height</code>, <code class=\"language-plaintext highlighter-rouge\">img-headline-height</code> as they’re deprecated and no longer available.</li>\n  <li>Add <code class=\"language-plaintext highlighter-rouge\">heading-img-local: true</code> if images are stored right inside your project.</li>\n</ul>\n\n<p>Check the following front-matter data for post thumbnails:</p>\n\n<ul>\n  <li>Replace all <code class=\"language-plaintext highlighter-rouge\">thumb</code> with <code class=\"language-plaintext highlighter-rouge\">thumbnail</code>.</li>\n  <li>Add <code class=\"language-plaintext highlighter-rouge\">thumb/</code> prefix to your filename, ie. <code class=\"language-plaintext highlighter-rouge\">thumbnail: thumb/my-post.png</code>.</li>\n  <li>Add <code class=\"language-plaintext highlighter-rouge\">thumbnail-local: true</code> if thumbnails are stored right inside your project.</li>\n</ul>",
      "excerpt": "There’re some significant changes in update v1.1.0, action required after you upgrade Almace Scaffolding.",
      "languages": null,
      "categories": ["news"],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "Open Graph",
      "permalink": "https://flxw.de/open-graph.html",
      "link": "https://flxw.de/open-graph.html",
      "date": "2017-01-06T00:00:00-08:00",
      
        "modified": "2022-10-22T06:05:10-07:00",
      
      "author": {
        "name": "Felix Wolff",
        "url": "https://flxw.de/",
        "email": "wolff.felix@proton.me"
      },
      "content": "<p>Theme Curtana has full Open Graph and Twitter Cards support.</p>\n\n<p>It will look for the image in the following order:</p>\n\n<ol>\n  <li>Use <code class=\"language-plaintext highlighter-rouge\">page.thumbnail</code> if defined in your post <a href=\"https://jekyllrb.com/docs/frontmatter/\">front-matter field</a>.</li>\n  <li>If no specified <code class=\"language-plaintext highlighter-rouge\">page.thumbnail</code> defined, it uses <a href=\"/custom-heading-background.html\">Heading Background Image</a> (aka. <code class=\"language-plaintext highlighter-rouge\">page.heading-bg</code>) if defined in your post front-matter field.</li>\n  <li>If no heading background image found, Curtana will try to grab the first image (wrapped inside <code class=\"language-plaintext highlighter-rouge\">&lt;img&gt;</code>) in your post as your post thumbnail</li>\n  <li>If nothing found, it falls back to <code class=\"language-plaintext highlighter-rouge\">logo.png</code> located at your site root.</li>\n</ol>\n\n<p>You can always use <code class=\"language-plaintext highlighter-rouge\">page.thumb_force_logo</code> in your post’s front-matter field to override the above lookup.</p>\n\n<p>Here’s a preview on Twitter:</p>\n\n<p><img src=\"https://d349cztnlupsuf.cloudfront.net/open-graph-preview.png\" alt=\"Twitter Cards (Open Graph compatible) Preview\" /></p>",
      "excerpt": "Theme Curtana has full Open Graph and Twitter Cards support.",
      "languages": null,
      "categories": ["note"],
      "tags": ["curtana"]
    }
    
  

  
    ,
    {
      "title": "Testing Readability with a Bunch of Text",
      "permalink": "https://flxw.de/readability.html",
      "link": "https://flxw.de/readability.html",
      "date": "2017-01-01T00:00:00-08:00",
      
        "modified": "2022-10-22T06:05:10-07:00",
      
      "author": {
        "name": "Felix Wolff",
        "url": "https://flxw.de/",
        "email": "wolff.felix@proton.me"
      },
      "content": "<p>Portland in shoreditch Vice, labore typewriter pariatur hoodie fap sartorial Austin. Pinterest literally occupy Schlitz forage. Odio ad blue bottle vinyl, 90’s narwhal commodo bitters pour-over nostrud. Ugh est hashtag in, fingerstache adipisicing laboris esse Pinterest shabby chic Portland. Shoreditch bicycle rights anim, flexitarian laboris put a bird on it vinyl cupidatat narwhal. Hashtag artisan skateboard, flannel Bushwick nesciunt salvia aute fixie do plaid post-ironic dolor McSweeney’s. Cliche pour-over chambray nulla four loko skateboard sapiente hashtag.</p>\n\n<p>Vero laborum commodo occupy. Semiotics voluptate mumblecore pug. Cosby sweater ullamco quinoa ennui assumenda, sapiente occupy delectus lo-fi. Ea fashion axe Marfa cillum aliquip. Retro Bushwick keytar cliche. Before they sold out sustainable gastropub Marfa readymade, ethical Williamsburg skateboard brunch qui consectetur gentrify semiotics. Mustache cillum irony, fingerstache magna pour-over keffiyeh tousled selfies.</p>\n\n<h2 id=\"cupidatat-90s-lo-fi-authentic-try-hard\">Cupidatat 90’s lo-fi authentic try-hard</h2>\n\n<p>In pug Portland incididunt mlkshk put a bird on it vinyl quinoa. Terry Richardson shabby chic +1, scenester Tonx excepteur tempor fugiat voluptate fingerstache aliquip nisi next level. Farm-to-table hashtag Truffaut, Odd Future ex meggings gentrify single-origin coffee try-hard 90’s.</p>\n\n<ul>\n  <li>Sartorial hoodie</li>\n  <li>Labore viral forage</li>\n  <li>Tote bag selvage</li>\n  <li>DIY exercitation et id ugh tumblr church-key</li>\n</ul>\n\n<p>Incididunt umami sriracha, ethical fugiat VHS ex assumenda yr irure direct trade. Marfa Truffaut bicycle rights, kitsch placeat Etsy kogi asymmetrical. Beard locavore flexitarian, kitsch photo booth hoodie plaid ethical readymade leggings yr.</p>\n\n<p>Aesthetic odio dolore, meggings disrupt qui readymade stumptown brunch Terry Richardson pour-over gluten-free. Banksy american apparel in selfies, biodiesel flexitarian organic meh wolf quinoa gentrify banjo kogi. Readymade tofu ex, scenester dolor umami fingerstache occaecat fashion axe Carles jean shorts minim. Keffiyeh fashion axe nisi Godard mlkshk dolore. Lomo you probably haven’t heard of them eu non, Odd Future Truffaut pug keytar meggings McSweeney’s Pinterest cred. Etsy literally aute esse, eu bicycle rights qui meggings fanny pack. Gentrify leggings pug flannel duis.</p>\n\n<h2 id=\"forage-occaecat-cardigan-qui\">Forage occaecat cardigan qui</h2>\n\n<p>Fashion axe hella gastropub lo-fi kogi 90’s aliquip +1 veniam delectus tousled. Cred sriracha locavore gastropub kale chips, iPhone mollit sartorial. Anim dolore 8-bit, pork belly dolor photo booth aute flannel small batch. Dolor disrupt ennui, tattooed whatever salvia Banksy sartorial roof party selfies raw denim sint meh pour-over. Ennui eu cardigan sint, gentrify iPhone cornhole.</p>\n\n<blockquote>\n  <p>Whatever velit occaecat quis deserunt gastropub, leggings elit tousled roof party 3 wolf moon kogi pug blue bottle ea. Fashion axe shabby chic Austin quinoa pickled laborum bitters next level, disrupt deep v accusamus non fingerstache.</p>\n</blockquote>\n\n<p>Tote bag asymmetrical elit sunt. Occaecat authentic Marfa, hella McSweeney’s next level irure veniam master cleanse. Sed hoodie letterpress artisan wolf leggings, 3 wolf moon commodo ullamco. Anim occupy ea labore Terry Richardson. Tofu ex master cleanse in whatever pitchfork banh mi, occupy fugiat fanny pack Austin authentic. Magna fugiat 3 wolf moon, labore McSweeney’s sustainable vero consectetur. Gluten-free disrupt enim, aesthetic fugiat jean shorts trust fund keffiyeh magna try-hard.</p>\n\n<h2 id=\"hoodie-duis\">Hoodie Duis</h2>\n\n<p>Actually salvia consectetur, hoodie duis lomo YOLO sunt sriracha. Aute pop-up brunch farm-to-table odio, salvia irure occaecat. Sriracha small batch literally skateboard. Echo Park nihil hoodie, aliquip forage artisan laboris. Trust fund reprehenderit nulla locavore. Stumptown raw denim kitsch, keffiyeh nulla twee dreamcatcher fanny pack ullamco 90’s pop-up est culpa farm-to-table. Selfies 8-bit do pug odio.</p>\n\n<h3 id=\"thundercats-ho\">Thundercats Ho!</h3>\n\n<p>Fingerstache thundercats Williamsburg, deep v scenester Banksy ennui vinyl selfies mollit biodiesel duis odio pop-up. Banksy 3 wolf moon try-hard, sapiente enim stumptown deep v ad letterpress. Squid beard brunch, exercitation raw denim yr sint direct trade. Raw denim narwhal id, flannel DIY McSweeney’s seitan. Letterpress artisan bespoke accusamus, meggings laboris consequat Truffaut qui in seitan. Sustainable cornhole Schlitz, twee Cosby sweater banh mi deep v forage letterpress flannel whatever keffiyeh. Sartorial cred irure, semiotics ethical sed blue bottle nihil letterpress.</p>\n\n<p>Occupy et selvage squid, pug brunch blog nesciunt hashtag mumblecore skateboard yr kogi. Ugh small batch swag four loko. Fap post-ironic qui tote bag farm-to-table american apparel scenester keffiyeh vero, swag non pour-over gentrify authentic pitchfork. Schlitz scenester lo-fi voluptate, tote bag irony bicycle rights pariatur vero Vice freegan wayfarers exercitation nisi shoreditch. Chambray tofu vero sed. Street art swag literally leggings, Cosby sweater mixtape PBR lomo Banksy non in pitchfork ennui McSweeney’s selfies. Odd Future Banksy non authentic.</p>\n\n<p>Aliquip enim artisan dolor post-ironic. Pug tote bag Marfa, deserunt pour-over Portland wolf eu odio intelligentsia american apparel ugh ea. Sunt viral et, 3 wolf moon gastropub pug id. Id fashion axe est typewriter, mlkshk Portland art party aute brunch. Sint pork belly Cosby sweater, deep v mumblecore kitsch american apparel. Try-hard direct trade tumblr sint skateboard. Adipisicing bitters excepteur biodiesel, pickled gastropub aute veniam.</p>",
      "excerpt": "Portland in shoreditch Vice, labore typewriter pariatur hoodie fap sartorial Austin. Pinterest literally occupy Schlitz forage. Odio ad blue bottle vinyl, 90’s narwhal commodo bitters pour-over nostrud. Ugh est hashtag in, fingerstache adipisicing laboris esse Pinterest shabby chic Portland. Shoreditch bicycle rights anim, flexitarian laboris put a bird on it vinyl cupidatat narwhal. Hashtag artisan skateboard, flannel Bushwick nesciunt salvia aute fixie do plaid post-ironic dolor McSweeney’s. Cliche pour-over chambray nulla four loko skateboard sapiente hashtag.",
      "languages": null,
      "categories": ["blog"],
      "tags": ["sample","post,","readability,","test,","intro"]
    }
    
  

  
    ,
    {
      "title": "Jekyll Theme Compatibility",
      "permalink": "https://flxw.de/jekyll-theme-compatibility.html",
      "link": "https://flxw.de/jekyll-theme-compatibility.html",
      "date": "2016-11-07T00:00:00-08:00",
      
        "modified": "2022-10-22T06:05:10-07:00",
      
      "author": {
        "name": "Felix Wolff",
        "url": "https://flxw.de/",
        "email": "wolff.felix@proton.me"
      },
      "content": "<p>With the recent release of Jekyll, it gets the built-in ability to support <a href=\"https://jekyllrb.com/docs/themes/\">themes</a>, since we’ve already added theme support in 2015, the original config variables <code class=\"language-plaintext highlighter-rouge\">theme</code> would be conflicted with the built-in one.</p>\n\n<p>To solve this issue, I’ve renamed our <code class=\"language-plaintext highlighter-rouge\">theme</code> option to <code class=\"language-plaintext highlighter-rouge\">amsf_theme</code>. And here’s what you need to do to resolve compatibility issues after upgrading to latest Almace Scaffolding:</p>\n\n<ul>\n  <li>Rename your original <code class=\"language-plaintext highlighter-rouge\">theme</code> option in <code class=\"language-plaintext highlighter-rouge\">_amsf.yml</code> to <code class=\"language-plaintext highlighter-rouge\">amsf_theme</code>.</li>\n  <li>Add <code class=\"language-plaintext highlighter-rouge\">amsf_theme_url</code> with your theme Git URL.</li>\n  <li>Replace all <code class=\"language-plaintext highlighter-rouge\">site.theme</code> with <code class=\"language-plaintext highlighter-rouge\">site.amsf_theme</code> in your page templates.</li>\n</ul>",
      "excerpt": "With the recent release of Jekyll, it gets the built-in ability to support themes, since we’ve already added theme support in 2015, the original config variables theme would be conflicted with the built-in one.",
      "languages": null,
      "categories": ["blog"],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "Introducing Curtana",
      "permalink": "https://flxw.de/theme-curtana.html",
      "link": "https://flxw.de/theme-curtana.html",
      "date": "2016-06-01T00:00:00-07:00",
      
        "modified": "2022-10-22T06:05:10-07:00",
      
      "author": {
        "name": "Felix Wolff",
        "url": "https://flxw.de/",
        "email": "wolff.felix@proton.me"
      },
      "content": "<p>Curtana is the default theme of <a href=\"https://sparanoid.com/lab/amsf/\">AMSF</a> (Almace Scaffolding).</p>\n\n<h3 id=\"features\">Features</h3>\n\n<ul>\n  <li>A variant of <a href=\"https://sparanoid.com/\">sparanoid.com</a>, looking great on any modern browsers</li>\n  <li>Minimalism design, No jQuery, no <code class=\"language-plaintext highlighter-rouge\">everybody-shake-ur-body.js</code></li>\n  <li>Ideal for the personal blog, portfolio, product blog and Tumblr-like link blog</li>\n  <li>(Maybe) <a href=\"https://github.com/sparanoid/sparanoid.com/commit/9b44b4c0f57c3dd1e828d828a95cc21b992785ce\">the first</a> template that uses <a href=\"https://www.w3.org/TR/css3-values/#viewport-relative-lengths\">viewport relative units</a></li>\n  <li>Handcrafted stylesheets. No Bootstrap or other bloated frameworks are used, unminified CSS &lt; 12 KB</li>\n  <li>Predefined CSS and Sass (SCSS) variables make it easier to change color schemes for posts</li>\n  <li>Dynamic color scheme for code highlighters powered by <a href=\"https://sparanoid.com/lab/randomized/\">Randomized</a></li>\n  <li>Open Graph and Twitter Cards support</li>\n  <li>No Internet Explorer support</li>\n</ul>",
      "excerpt": "Curtana is the default theme of AMSF (Almace Scaffolding).",
      "languages": null,
      "categories": ["note"],
      "tags": ["curtana"]
    }
    
  

  
    ,
    {
      "title": "Deployment Methods",
      "permalink": "https://flxw.de/deployment-methods.html",
      "link": "https://flxw.de/deployment-methods.html",
      "date": "2016-03-18T00:00:00-07:00",
      
        "modified": "2022-10-22T06:05:10-07:00",
      
      "author": {
        "name": "Felix Wolff",
        "url": "https://flxw.de/",
        "email": "wolff.felix@proton.me"
      },
      "content": "<p>Sites generated using Almace Scaffolding can be deployed in nearly any web hosting services. A few of the most common deployment techniques are described below. More deployment methods please refer to <a href=\"https://jekyllrb.com/docs/deployment-methods/\">Jekyll - Deployment methods</a>.</p>\n\n<h2 id=\"cloudflare-pages\">Cloudflare Pages</h2>\n\n<p>The simplest way to deploy your AMSF site is using <a href=\"https://pages.cloudflare.com/\">Cloudflare Pages</a>. Just signup for Cloudflare and connect it with your GitHub account. Create a Pages project and use the following settings:</p>\n\n<ul>\n  <li>Framework preset: Jekyll</li>\n  <li>Build command: <code class=\"language-plaintext highlighter-rouge\">grunt build</code></li>\n  <li>Build output directory: <code class=\"language-plaintext highlighter-rouge\">_site</code></li>\n</ul>\n\n<h2 id=\"web-hosting-providers-ftpsftp\">Web Hosting Providers (FTP/SFTP)</h2>\n\n<p>Just about any traditional web hosting provider will let you upload files to their servers over FTP. You can simply run the <code class=\"language-plaintext highlighter-rouge\">grunt build</code> command and upload all files generated under <code class=\"language-plaintext highlighter-rouge\">_site</code> to the HTTP root folder of your hosting account.</p>\n\n<h2 id=\"rsync\">rsync</h2>\n\n<p>There’s a <code class=\"language-plaintext highlighter-rouge\">_deploy.yml</code> at the root of your AMSF project containing a basic <code class=\"language-plaintext highlighter-rouge\">rsync</code> configurations. Change these configurations to yours and then run:</p>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>grunt deploy:rsync\n</code></pre></div></div>\n\n<p>You can deploy it for specific environments, the following command will deploy your site to <code class=\"language-plaintext highlighter-rouge\">beta</code> environment via <code class=\"language-plaintext highlighter-rouge\">rsync</code> method you defined in <code class=\"language-plaintext highlighter-rouge\">_deploy.yml</code>:</p>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>grunt deploy:rsync <span class=\"nt\">--env</span><span class=\"o\">=</span>beta\n</code></pre></div></div>\n\n<h2 id=\"amazon-s3-s3_website\">Amazon S3 (s3_website)</h2>\n\n<p>You can also deploy your site to Amazon S3 via <a href=\"https://github.com/laurilehmijoki/s3_website\">s3_website</a>, see <code class=\"language-plaintext highlighter-rouge\">s3_website.example.yml</code> for more info.</p>",
      "excerpt": "Sites generated using Almace Scaffolding can be deployed in nearly any web hosting services. A few of the most common deployment techniques are described below. More deployment methods please refer to Jekyll - Deployment methods.",
      "languages": null,
      "categories": ["note"],
      "tags": ["deployment"]
    }
    
  

  
    ,
    {
      "title": "Why I am done with smart watches",
      "permalink": "https://flxw.de/why-i-am-done-with-smartwatches.html",
      "link": "https://flxw.de/why-i-am-done-with-smartwatches.html",
      "date": "2015-11-15T00:00:00-08:00",
      
        "modified": "2022-10-22T06:05:10-07:00",
      
      "author": {
        "name": "Felix Wolff",
        "url": "https://flxw.de/",
        "email": "wolff.felix@proton.me"
      },
      "content": "<p>It is a thing more and more common. People casually chatting, operating their\nvarious electronic devices simultaneously. When was the last time that you felt you had\nthe full attention of someone? It probably wasn’t when they were caressing their\ntouchscreens with their fingertips. This is an essay on conversational\nquality and smart devices making us dumber. Dump your smartwatch.</p>\n\n<p>As a technolgically affine person, I was naturally amazed by the possibility to\nwear a computer on my wrist! It was October in the year 2014 and Motorola was about to\nrelease their super-hyped smartwatch <em>Moto 360</em>. It was shown at Google I/O 2014 and reception\nwas spectacular. The same momentum has built up for its <a href=\"http://www.wareable.com/smartwatches/motorola-moto-360-2-release-date-price-specs-725\">successor</a>.</p>\n\n<p>And so, I found a Moto 360 special edition under the christmas tree. One\nof the most beautiful smartwatches ever. And from there on, amazement went downhill.</p>\n\n<h2 id=\"tilt-sensors\">Tilt sensors</h2>\n<p><em>To activate their displays, most smartwatches (including the Apple Watch)\nrely on tilt sensors. This helps them save battery.</em></p>\n\n<p>Well, but who flicks their wrist in an awkwardly strong motion to know the time?\nJust right - no one. Only die-hard Apple fans are portraying awkward movements to\npay tribute to their timepiece.\nEvery watchwearer just takes a short <em>glance</em> at their timepiece,\nand will never <em>stare</em> at their wrist hard.</p>\n\n<h2 id=\"power-and-stability\">Power and stability</h2>\n<p><em>“Excuse me, may I ask you for the time?”</em><br />\n  <em>“Give me a few minutes, my watch just crashed.”</em></p>\n\n<p>Not a joke, this first-world-problem happened to me more than once.\nSitting on my wrist, doing nothing all day, the small computer\nis so surprised at being needed that it instantly flips a bit.\nSince UIs for watches have never been developed, it is no wonder that\nthere is lacking feedback. Oh, and of course one should never\nforget to recharge it in the evening, if one does not want to wear\na very expensive bracelet the next afternoon.</p>\n\n<h1 id=\"real-world-integration\">Real world integration</h1>\n<p>In all the promotion, life with a smartwatch is supposed to be made easier in the real world.\nContactless payment, calls, etc. All the lot that takes time off our hands.\nYet, there are few apps for smartwatches that give you a hand in reallife.\nOne example would be the <a href=\"https://play.google.com/store/apps/details?id=com.hole19golf.hole19.beta\">Hole19 golf score tracker</a>.\nThe app is great, but the score counter for the watch made me feel clunkier than\never on the course.</p>\n\n<p>Another example would be the <a href=\"https://play.google.com/store/apps/details?id=de.stocard.stocard\">Stocards app</a>,\nan application for slimming your wallet by digitizing benefit/award cards.\nThe app for the phone is again: great. Even the Android Wear implementation\nis straightforward but: No supermarket I have been to has had scanners able to read the\ntiny barcode off the screen. Bummer.</p>\n\n<h2 id=\"notification-barrages\">Notification barrages</h2>\n<p>Our phone is abuzz with notifications from the happenings of almost any social network that we are part of.\nAnd all this buzz will make your wrist ring with delight. A message here,\nan email there, a calendar reminder, etc. Anything that your phone can tell you will now\nsit at your wrist. <em>Awesome</em>, you may think, and this is the exact reason for which I bought my\nsmartwatch.</p>\n\n<p>Imagine you have just received a message. You glance at your watch, be it right after the watch\nbuzzed, or anytime after. Chances are that you will read it. Now you have the information at\nthe top of your head, and what you have done previosly has already been interrupted by this context\nswitch. Will you respond to the message?</p>\n\n<h2 id=\"on-conversational-quality\">On conversational quality</h2>\n<p>You will very likely respond, since you are thinking about it anyway.\nThe phone is only a flick of the wrist away and there you are:\nHaving completely abandoned what you were doing, mentally\nenslaved by your minds wish to wander to easy tasks.\nYou are serving your watch. A watch that is not even serving you,\nit is not even collecting any useful health data.\nThe world might not have caught up with wearable technology yet - until now\nit is simply not worth it.</p>\n\n<p>It is no wonder that more and more dystopic versions of communications technolgy\nare produced by artists. Take a look at this very popular\n<a href=\"http://antoinegeiger.com/filter/photo/SUR-FAKE\">photo series</a> by Antoine Geiger.\nYou will probably see yourself in one of those pictures.</p>\n\n<p>Even advertising has found this to be worthy a topic. It makes me feel guilty.\nDoes it make you feel the same?</p>\n\n<p>There are numerous studies out there that will prove that emotional bonding\nand conversational variety will strongly decrease with smartphones on the table.</p>\n\n<p><em>Look it up now, this article will still be here when you come back.</em></p>\n\n<p>Living without those devices has become impossible in our professional world.\nI will not suggest you to go and drop all your tech in a bin and light a campfire.\nI want to raise awareness for your human surroundings and the richness of\nexchange that you are missing because of coldly lit displays.</p>\n\n<p>Now put away the device with which you read this and say hello to the person next to you,\neven if it is a stranger. Conversation is beautiful, most notably if it shall not serve\na higher purpose.</p>",
      "excerpt": "It is a thing more and more common. People casually chatting, operating their\nvarious electronic devices simultaneously. When was the last time that you felt you had\nthe full attention of someone? It probably wasn’t when they were caressing their\ntouchscreens with their fingertips. This is an essay on conversational\nquality and smart devices making us dumber. Dump your smartwatch.",
      "languages": null,
      "categories": ["blog"],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "Connecting MS Office Excel Analysis with HANA",
      "permalink": "https://flxw.de/setting-up-ms-office-excel-analysis-with-HANA.html",
      "link": "https://flxw.de/setting-up-ms-office-excel-analysis-with-HANA.html",
      "date": "2015-09-25T00:00:00-07:00",
      
        "modified": "2022-10-22T06:05:10-07:00",
      
      "author": {
        "name": "Felix Wolff",
        "url": "https://flxw.de/",
        "email": "wolff.felix@proton.me"
      },
      "content": "<p>Here at my SAP internship, I want to connect Analysis for Excel with\nSAP HANA. Unfortunately, this fairly simple procedure is the ultimate example for\nbad documentation, and I want to note down my approach here for getting it to work.</p>\n\n<p>The following is for Analysis for Excel versions <strong>2.0 and greater</strong> (<a href=\"http://scn.sap.com/docs/DOC-63785\">why</a>)</p>\n\n<ol>\n<li>Make sure Analysis for Excel is up to date. An obvious step but you don't want any version conflicts after having it set up.</li>\n<li>Install the <em>HANA Client for Excel</em> from <a href=\"https://support.sap.com/software/installations.html\">here</a> (Click <em>Search for Software</em>)</li>\n<li>Grant your database user the required privileges for accessing HANA via Excel through HTTP (<a href=\"http://scn.sap.com/community/businessobjects-analysis-ms-office/blog\">why</a>)\n\n<ol>\n<li>Import the delivery unit <em>AHCO_INA_SERVICE.tgz</em> from the server</li>\n<li>Add the <em>INA_USER</em> role to your user under the <em>granted roles</em> section</li>\n<li>Add the object privileges <em>_SYS_BI</em>, <em>_SYS_BIC</em> and <em>_SYS_RT</em> to your user and enable the <em>SELECT</em> checkbox for those</li>\n</ol></li>\n<li>Open Analysis for Excel (<a href=\"http://scn.sap.com/docs/DOC-63784\">see images</a>)\n\n<ol>\n<li>Click the <em>Analysis</em> tab</li>\n<li>Hit the <em>Insert Data Source</em> and <em>Select Data Source...</em></li>\n<li>Right-click inside the selection menu, and <em>Create new SAP HANA connection...</em></li>\n<li>Enter your credentials and the selection menu for views should pop up</li>\n</ol></li>\n</ol>",
      "excerpt": "Here at my SAP internship, I want to connect Analysis for Excel with\nSAP HANA. Unfortunately, this fairly simple procedure is the ultimate example for\nbad documentation, and I want to note down my approach here for getting it to work.",
      "languages": null,
      "categories": ["blog"],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "Vision: What wearable device applications should do next",
      "permalink": "https://flxw.de/my-vision-on-wearables.html",
      "link": "https://flxw.de/my-vision-on-wearables.html",
      "date": "2015-09-11T00:00:00-07:00",
      
        "modified": "2022-10-22T06:05:10-07:00",
      
      "author": {
        "name": "Felix Wolff",
        "url": "https://flxw.de/",
        "email": "wolff.felix@proton.me"
      },
      "content": "<p>Having looked at wearables intensively for several weeks, I want to share my vision\nof how they should be developed further. Being mere data displays until now, wearable technology\nhas the potential to be so much more. Making data actionable is what I am talking about.</p>\n\n<p>Wearables I have looked at include: Withings Ox, Fitbits Charge HR, Motorolas Moto 360\nand the Misfit Shine. All of these feature step and sleeptracking capabilities\nand have accompanying feature-rich applications doing a good job at\nvisualizing the collected data.</p>\n\n<p>Just take a look at the gorgeous graph web-based Google Fit draws for\nmy step data (as of September 2015):</p>\n\n<p><img src=\"/assets/wearables-walk-stat.png\" alt=\"Google Fit walking statistics\" /></p>\n\n<p>The data displayed is very clear. It displays how many steps I have made\neach day within a week.\nWe can view a similar graph for the day before, the day before that,\nthe week before that, some months back and so on. We can\nalso view monthly statistics.</p>\n\n<p>Would we be able to derive actionable insights from the data? What use is six months worth\nof data if you have no clue about how to read it? Does it deliver any value besides “Oh that is a lot”\nor “oh that is not so much”? Machines are very good at deriving\npatterns from great amounts of data - and I believe that this capability should be put to use.</p>\n\n<p><em>Providing background information</em></p>\n\n<p>Let’s have a look at this graph of sleep information.\nIt tells me when I experienced deep sleep and light sleep and when my body moved during sleeping.\nNow I can see when I entered a different sleep phase. But what will I do with this information?\nCan I improve my sleep based on this data? I <em>could</em>, if I knew how.</p>\n\n<p><em>Giving actionable advice</em></p>\n\n<p>I could make changes if I knew about basic sleep mechanisms and how behaviour before going to bed affects sleep.\nCertainly no secret, the blue light emitted by electronic devices affects our sleep in a <a href=\"http://www.health.harvard.edu/staying-healthy/blue-light-has-a-dark-side\">bad way</a>.\nWouldn’t it be great if such an insight was shared with users of the app?</p>\n\n<p>I believe that the user should not have to have to analyze the data himself (although he should certainly have the possibility to do so),\nbut that analytics should give actionable advice, if it can be given. This way, a source\nfor information overload is reduced and the matter is only brought to our attention if\nit is demanding. One possibility might be via simple Google Now Card:</p>\n\n<p><img src=\"/assets/wearables-google-now-advice.png\" alt=\"Google Now Card sleep advice\" /></p>\n\n<p>There is already an app that does something in that direction. <a href=\"https://play.google.com/store/apps/details?id=com.urbandroid.sleep\">Sleep as Android</a> gives recommendations on how to catch up on sleep deficit, although\nthese tips are standardized and not tailored to ones demands.</p>\n\n<p>If anyone of Misfit, Fitbit, Withings, Google or Motorola reads this: These devices are great!\nTeam up with some fitness experts and give your product an edge over the competition!\nWhat makes a tracker really valuable is the data analytics, not the hardware. Take a look\nat <a href=\"http://freeletics.com\">Freeletics</a> for example. They provide members with weekly tips and insights\nin bodily functions and regeneration mechanics. This information could easily be reused in\nyour applications!</p>",
      "excerpt": "Having looked at wearables intensively for several weeks, I want to share my vision\nof how they should be developed further. Being mere data displays until now, wearable technology\nhas the potential to be so much more. Making data actionable is what I am talking about.",
      "languages": null,
      "categories": ["blog"],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "Making nginx act as an SMTP relay",
      "permalink": "https://flxw.de/nginx-smtp-relay.html",
      "link": "https://flxw.de/nginx-smtp-relay.html",
      "date": "2014-09-04T00:00:00-07:00",
      
        "modified": "2022-10-22T06:05:10-07:00",
      
      "author": {
        "name": "Felix Wolff",
        "url": "https://flxw.de/",
        "email": "wolff.felix@proton.me"
      },
      "content": "<p>To test an application out in the wild I had to host it on my server.\nAs it receives and processes email via SMTP, it needed access to port 25.</p>\n\n<p>I did not bother learning and installing some tool that makes sub-1000 ports\navailable to applications without superuser rights, and thus I made use\nof nginx’ capabilities.</p>\n\n<p>Inside the main <em>nginx.conf</em>, I added a section for email:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>mail {\n    # See sample authentication script at:\n    # http://wiki.nginx.org/ImapAuthenticateWithApachePhpScript\n\n    # auth_http localhost/auth.php;\n    # pop3_capabilities \"TOP\" \"USER\";\n    # imap_capabilities \"IMAP4rev1\" \"UIDPLUS\";\n\n    auth_http http://127.0.0.1/mail/auth;\n    xclient off;\n    proxy_pass_error_message on;\n\n    server {\n        listen     25;\n        protocol   smtp;\n        timeout    5s;\n        proxy      on;\n        xclient    off;\n        smtp_auth  none;\n        so_keepalive on;\n    }\n}\n</code></pre></div></div>\n\n<p>Each of the configurations for my sites are loaded as individual modules, like it is the case with Apache.\nInside the configuration that handles the default behaviour for the web server, the following route was established.\nIt tells the mail client where to find the SMTP server. This can also be equipped with more logic to make it act as a load balancer.</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>    location = /mail/auth {\n            set $reply ERROR;\n\n            if ($http_auth_smtp_to ~ flxw.de) {\n                set $reply OK;\n            }\n\n            add_header Auth-Status OK;\n            add_header Auth-Server 127.0.0.1;\n            add_header Auth-Port 2525;\n            add_header Auth-Wait 1;\n            return 204;\n        }\n</code></pre></div></div>\n\n<p>And finally there is the configuration file for the web app itself.</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>upstream app.myapp.de {\n    server 127.0.0.1:8080;\n}\n\n# the nginx server instance\nserver {\n    listen 0.0.0.0:80;\n    server_name myapp.flxw.de;\n    access_log /var/log/nginx/myapp.mydomain.de.log;\n\n    auth_basic  \"Restricted\";\n    auth_basic_user_file /etc/nginx/htpasswd;\n\n    # pass the request to the node.js server with the correct headers and much more can be added, see nginx config options\n    location / {\n      proxy_set_header X-Real-IP $remote_addr;\n      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n      proxy_set_header Host $http_host;\n      proxy_set_header X-NginX-Proxy true;\n\n      proxy_pass http://myapp.mydomain.de/;\n      proxy_redirect off;\n    }\n }\n</code></pre></div></div>",
      "excerpt": "To test an application out in the wild I had to host it on my server.\nAs it receives and processes email via SMTP, it needed access to port 25.",
      "languages": null,
      "categories": ["blog"],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "Welcome",
      "permalink": "https://flxw.de/welcome.html",
      "link": "https://flxw.de/welcome.html",
      "date": "2014-06-13T00:00:00-07:00",
      
        "modified": "2022-10-22T06:05:10-07:00",
      
      "author": {
        "name": "Felix Wolff",
        "url": "https://flxw.de/",
        "email": "wolff.felix@proton.me"
      },
      "content": "<p>AMSF, a.k.a. <strong>Almace Scaffolding</strong>, is a super-fast Jekyll framework fighting against the website obesity. It supports LiveReload, Sass, HTML minification, inlined stylesheets and more.</p>\n\n<p class=\"largetype\">\n  <a href=\"/getting-started.html\">Getting Started →</a>\n</p>\n\n<p>Go to the <a href=\"https://github.com/sparanoid/almace-scaffolding\">GitHub</a> page for downloads, bug reports, and feature requests.</p>\n\n<h2 id=\"features\">Features</h2>\n\n<ul>\n  <li>Theme switching, you can switch themes with just one command</li>\n  <li>A fully configured Jekyll setup with well-defined <a href=\"https://github.com/sparanoid/almace-scaffolding/blob/master/_app/feed-atom.xml\">Atom feed</a> and <a href=\"https://github.com/sparanoid/almace-scaffolding/blob/master/_app/sitemap.xml\">sitemap</a></li>\n  <li><strong>Almace Scaffolding</strong> ships a sleek responsive theme <a href=\"https://github.com/amsf/amsf-curtana\">Curtana</a>, a variant of <a href=\"https://sparanoid.com/\">sparanoid.com</a>, looking great on any modern browsers</li>\n  <li>Every minified page generates only one HTTP request <sup id=\"fnref:1\" role=\"doc-noteref\"><a href=\"#fn:1\" class=\"footnote\" rel=\"footnote\">1</a></sup></li>\n  <li><a href=\"https://github.com/sparanoid/almace-scaffolding/blob/master/_config.example.yml\">Tons of configurable settings</a> for your posts and site customization</li>\n  <li>Service Worker support for lightning-fast experience</li>\n  <li>Built with Grunt.js for easy development</li>\n  <li>Travis support</li>\n</ul>\n\n<div class=\"footnotes\" role=\"doc-endnotes\">\n  <ol>\n    <li id=\"fn:1\" role=\"doc-endnote\">\n      <p>Based on the theme you’re using, theme Curtana generates only one HTTP request for production build when your posts don’t have fancy sliders or other external media files. <a href=\"#fnref:1\" class=\"reversefootnote\" role=\"doc-backlink\">&#8617;&#xfe0e;</a></p>\n    </li>\n  </ol>\n</div>",
      "excerpt": "AMSF, a.k.a. Almace Scaffolding, is a super-fast Jekyll framework fighting against the website obesity. It supports LiveReload, Sass, HTML minification, inlined stylesheets and more.",
      "languages": null,
      "categories": ["note"],
      "tags": ["getting-started"]
    }
    
  

  
    ,
    {
      "title": "Getting Started",
      "permalink": "https://flxw.de/getting-started.html",
      "link": "https://flxw.de/getting-started.html",
      "date": "2014-06-12T00:00:00-07:00",
      
        "modified": "2022-10-22T06:05:10-07:00",
      
      "author": {
        "name": "Felix Wolff",
        "url": "https://flxw.de/",
        "email": "wolff.felix@proton.me"
      },
      "content": "<ul id=\"markdown-toc\">\n  <li><a href=\"#requirements\" id=\"markdown-toc-requirements\">Requirements</a></li>\n  <li><a href=\"#method-run-in-docker\" id=\"markdown-toc-method-run-in-docker\">Method: Run in Docker</a>    <ul>\n      <li><a href=\"#custom-dependencies\" id=\"markdown-toc-custom-dependencies\">Custom Dependencies</a></li>\n    </ul>\n  </li>\n  <li><a href=\"#method-run-locally\" id=\"markdown-toc-method-run-locally\">Method: Run Locally</a>    <ul>\n      <li><a href=\"#upgrading\" id=\"markdown-toc-upgrading\">Upgrading</a></li>\n      <li><a href=\"#using-beta-release\" id=\"markdown-toc-using-beta-release\">Using Beta Release</a></li>\n    </ul>\n  </li>\n  <li><a href=\"#download\" id=\"markdown-toc-download\">Download</a></li>\n  <li><a href=\"#jekyll-migration\" id=\"markdown-toc-jekyll-migration\">Jekyll Migration</a></li>\n</ul>\n\n<h2 id=\"requirements\">Requirements</h2>\n\n<p>Almace Scaffolding has exactly the same requirements as Jekyll. For more info please refer to <a href=\"https://jekyllrb.com/docs/installation/\">Installation - Jekyll</a>.</p>\n\n<h2 id=\"method-run-in-docker\">Method: Run in Docker</h2>\n\n<p>You can simply run Almace Scaffolding in Docker with <code class=\"language-plaintext highlighter-rouge\">compose</code> command. Create your own <code class=\"language-plaintext highlighter-rouge\">docker-compose.yml</code> file with the following content:</p>\n\n<div class=\"language-yml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"na\">version</span><span class=\"pi\">:</span> <span class=\"s1\">'</span><span class=\"s\">3'</span>\n\n<span class=\"na\">x-defaults</span><span class=\"pi\">:</span> <span class=\"nl\">&amp;defaults</span>\n  <span class=\"na\">image</span><span class=\"pi\">:</span> <span class=\"s\">sparanoid/almace-scaffolding:latest</span>\n  <span class=\"na\">restart</span><span class=\"pi\">:</span> <span class=\"s\">always</span>\n  <span class=\"na\">volumes</span><span class=\"pi\">:</span>\n    <span class=\"pi\">-</span> <span class=\"s\">./_app/_posts/:/app/_app/_posts/</span>\n  <span class=\"na\">ports</span><span class=\"pi\">:</span>\n    <span class=\"pi\">-</span> <span class=\"s2\">\"</span><span class=\"s\">4321:4321\"</span>\n\n<span class=\"na\">services</span><span class=\"pi\">:</span>\n  <span class=\"na\">amsf</span><span class=\"pi\">:</span>\n    <span class=\"na\">&lt;&lt;</span><span class=\"pi\">:</span> <span class=\"nv\">*defaults</span>\n    <span class=\"na\">command</span><span class=\"pi\">:</span> <span class=\"s\">serve</span>\n</code></pre></div></div>\n\n<p>This is a minimal docker compose configuration with local <code class=\"language-plaintext highlighter-rouge\">_posts</code> volume mounted inside the container. The <a href=\"https://docs.docker.com/compose/compose-file/compose-file-v3/#volumes\">volumes</a> option can be different based on your customization.</p>\n\n<p>Mount custom data, pages, posts to override them inside container:</p>\n\n<div class=\"language-yml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nn\">...</span>\n  <span class=\"na\">volumes</span><span class=\"pi\">:</span>\n    <span class=\"pi\">-</span> <span class=\"s\">./_app/_data/:/app/_app/_data/</span>\n    <span class=\"pi\">-</span> <span class=\"s\">./_app/_pages/:/app/_app/_pages/</span>\n    <span class=\"pi\">-</span> <span class=\"s\">./_app/_posts/:/app/_app/_posts/</span>\n</code></pre></div></div>\n\n<p>Override config file:</p>\n\n<div class=\"language-yml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nn\">...</span>\n  <span class=\"na\">volumes</span><span class=\"pi\">:</span>\n    <span class=\"pi\">-</span> <span class=\"s\">./_config.yml:/app/_config.yml</span>\n</code></pre></div></div>\n\n<p>Use custom Gruntfile:</p>\n\n<div class=\"language-yml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nn\">...</span>\n  <span class=\"na\">volumes</span><span class=\"pi\">:</span>\n    <span class=\"pi\">-</span> <span class=\"s\">./Gruntfile.coffee:/app/Gruntfile.coffee</span>\n</code></pre></div></div>\n\n<p>Use custom AMSF config for custom themes and templates:</p>\n\n<div class=\"language-yml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nn\">...</span>\n  <span class=\"na\">volumes</span><span class=\"pi\">:</span>\n    <span class=\"pi\">-</span> <span class=\"s\">./_app/:/app/_app/</span>\n    <span class=\"pi\">-</span> <span class=\"s\">./_site/:/app/_site/</span>\n    <span class=\"pi\">-</span> <span class=\"s\">./_amsf.yml:/app/_amsf.yml</span>\n</code></pre></div></div>\n\n<p>You can see the example repo at <a href=\"https://github.com/amsf/docker-amsf-example\">amsf/docker-amsf-example</a>.</p>\n\n<h3 id=\"custom-dependencies\">Custom Dependencies</h3>\n\n<p>You can load custom dependencies (custom Grunt plugins or Jekyll plugins) in Docker by building your own Docker images. First you need to create a <code class=\"language-plaintext highlighter-rouge\">Dockerfile</code>:</p>\n\n<div class=\"language-dockerfile highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">FROM</span><span class=\"s\"> sparanoid/almace-scaffolding:latest</span>\n\n<span class=\"c\"># Copy custom dependencies configs</span>\n<span class=\"k\">COPY</span><span class=\"s\"> Gemfile* /app/</span>\n<span class=\"k\">COPY</span><span class=\"s\"> package.json /app/package.json</span>\n<span class=\"k\">COPY</span><span class=\"s\"> yarn.lock /app/yarn.lock</span>\n\n<span class=\"c\"># Reinstall project specific dependencies</span>\n<span class=\"k\">RUN </span>bundle <span class=\"nb\">install</span> <span class=\"o\">&amp;&amp;</span> yarn <span class=\"nb\">install</span>\n</code></pre></div></div>\n\n<p>Then build your image with Docker Compose:</p>\n\n<div class=\"language-yml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"na\">version</span><span class=\"pi\">:</span> <span class=\"s1\">'</span><span class=\"s\">3'</span>\n\n<span class=\"na\">x-defaults</span><span class=\"pi\">:</span> <span class=\"nl\">&amp;defaults</span>\n  <span class=\"na\">build</span><span class=\"pi\">:</span>\n    <span class=\"na\">context</span><span class=\"pi\">:</span> <span class=\"s\">.</span>\n    <span class=\"na\">dockerfile</span><span class=\"pi\">:</span> <span class=\"s\">Dockerfile</span>\n<span class=\"nn\">...</span>\n</code></pre></div></div>\n\n<h2 id=\"method-run-locally\">Method: Run Locally</h2>\n\n<ol>\n  <li><a href=\"https://github.com/sparanoid/almace-scaffolding/fork\">Fork</a> or clone the repo.</li>\n  <li>Install dependencies with Ruby gem <a href=\"https://bundler.io/\"><code class=\"language-plaintext highlighter-rouge\">bundler</code></a> and Node.js package manager <a href=\"https://www.npmjs.org/\"><code class=\"language-plaintext highlighter-rouge\">npm</code></a>.</li>\n  <li>Run <code class=\"language-plaintext highlighter-rouge\">grunt init</code> to initialize your project.</li>\n  <li>Run <code class=\"language-plaintext highlighter-rouge\">grunt serve</code> to fire up a local server.</li>\n  <li>Edit and customize your site.</li>\n  <li>Change Git remote to your own repo.</li>\n  <li>Push and deploy.</li>\n</ol>\n\n<p>So in short for geeks:</p>\n\n<div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>git clone https://github.com/sparanoid/almace-scaffolding my-site\n<span class=\"nv\">$ </span><span class=\"nb\">cd </span>my-site\n<span class=\"nv\">$ </span>bundle <span class=\"nb\">install</span> <span class=\"o\">&amp;&amp;</span> yarn <span class=\"nb\">install</span>\n<span class=\"nv\">$ </span>grunt init\n<span class=\"nv\">$ </span>grunt serve\n<span class=\"c\"># ...editing</span>\n<span class=\"nv\">$ </span>git remote set-url origin https://github.com/sparanoid/my-site.git\n<span class=\"nv\">$ </span>git push <span class=\"nt\">-u</span> origin master\n<span class=\"c\"># ...publishing</span>\n<span class=\"nv\">$ </span>grunt <span class=\"o\">&amp;&amp;</span> grunt deploy:rsync <span class=\"nt\">--env</span><span class=\"o\">=</span>prod\n</code></pre></div></div>\n\n<h3 id=\"upgrading\">Upgrading</h3>\n\n<p>It will be easy if you’re a casual blogger and keep every core and template file untouched. You can use the following command to update Almace Scaffolding core files:</p>\n\n<div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>grunt amsf-update\n</code></pre></div></div>\n\n<p>It checks the latest Almace Scaffolding build from GitHub and updates core files automatically. Please keep in mind that if you changed some of the AMSF core files this action will <strong>override</strong> the changes you made. So it’s recommended to keep your project under version control, you will always be able to compare changes for Almace Scaffolding.</p>\n\n<h3 id=\"using-beta-release\">Using Beta Release</h3>\n\n<p>By default, when you run <code class=\"language-plaintext highlighter-rouge\">amsf-update</code> you will get updated files from <code class=\"language-plaintext highlighter-rouge\">release</code> branch. However, I’m continuously working on Almace Scaffolding, so there may have testing branches you can try and give me feedback if you’re interested. You can check the AMSF GitHub repository for available branches, and it’s very easy to switch:</p>\n\n<div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>grunt amsf-update <span class=\"nt\">--branch</span><span class=\"o\">=</span>feat/service-worker\n</code></pre></div></div>\n\n<p>The branch <code class=\"language-plaintext highlighter-rouge\">master</code> is the one which is always available to check out and also has the latest changes:</p>\n\n<div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>grunt amsf-update <span class=\"nt\">--branch</span><span class=\"o\">=</span>master\n</code></pre></div></div>\n\n<p>If you messed up with the testing branch, don’t worry, you can just run a normal update to revert them back:</p>\n\n<div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>grunt amsf-update\n</code></pre></div></div>\n\n<h2 id=\"download\">Download</h2>\n\n<p>Go to the <a href=\"https://github.com/sparanoid/almace-scaffolding\">GitHub repository</a> for downloads, bug reports, and feature requests.</p>\n\n<h2 id=\"jekyll-migration\">Jekyll Migration</h2>\n\n<p>You can simply copy all posts from your old Jekyll setup into <code class=\"language-plaintext highlighter-rouge\">_app/_posts</code>, you can also transfer your custom pages into <code class=\"language-plaintext highlighter-rouge\">_app/_pages/</code>.</p>",
      "excerpt": "",
      "languages": null,
      "categories": ["note"],
      "tags": ["getting-started"]
    }
    
  

  
    ,
    {
      "title": "Customizing Styles",
      "permalink": "https://flxw.de/customizing-styles.html",
      "link": "https://flxw.de/customizing-styles.html",
      "date": "2014-06-11T00:00:00-07:00",
      
        "modified": "2022-10-22T06:05:10-07:00",
      
      "author": {
        "name": "Felix Wolff",
        "url": "https://flxw.de/",
        "email": "wolff.felix@proton.me"
      },
      "content": "<p>You can customize the basic look and feel without touching the theme files by changing <code class=\"language-plaintext highlighter-rouge\">user.js</code> and <code class=\"language-plaintext highlighter-rouge\">user.scss</code>:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>├── _app/\n|   ├── assets/\n|   |   └── _js/\n|   |   |   └── user.js\n|   |   └── _scss/\n|   |   |   └── user.scss\n|   |   └── themes/\n|   |   |   └── ...\n</code></pre></div></div>\n\n<p>These files won’t be overwritten when you update Almace Scaffolding or update your themes.</p>",
      "excerpt": "You can customize the basic look and feel without touching the theme files by changing user.js and user.scss:",
      "languages": null,
      "categories": ["note"],
      "tags": ["customization"]
    }
    
  

  
    ,
    {
      "title": "Configuration",
      "permalink": "https://flxw.de/configuration.html",
      "link": "https://flxw.de/configuration.html",
      "date": "2014-06-11T00:00:00-07:00",
      
        "modified": "2022-10-22T06:05:10-07:00",
      
      "author": {
        "name": "Felix Wolff",
        "url": "https://flxw.de/",
        "email": "wolff.felix@proton.me"
      },
      "content": "<h2 id=\"configuration-settings\">Configuration Settings</h2>\n\n<ul>\n  <li>All AMSF built-in settings can be configured at <a href=\"https://github.com/sparanoid/almace-scaffolding/blob/master/_config.yml\"><code class=\"language-plaintext highlighter-rouge\">_config.yml</code></a>.</li>\n  <li>Theme specific variables can be found at <code class=\"language-plaintext highlighter-rouge\">./_app/_data/theme-name.yml</code>.</li>\n  <li>Additional variables are stored in <a href=\"https://github.com/sparanoid/almace-scaffolding/blob/master/_app/_data\"><code class=\"language-plaintext highlighter-rouge\">./_app/_data/</code></a> directory. They can be accessed by Jekyll. (<a href=\"https://jekyllrb.com/docs/datafiles/\">More info</a>)</li>\n  <li>You should also change <code class=\"language-plaintext highlighter-rouge\">favicon.*</code> and <code class=\"language-plaintext highlighter-rouge\">apple-touch-icon.png</code> to yours.</li>\n  <li><code class=\"language-plaintext highlighter-rouge\">logo.png</code> is mainly used by Open Graph and Twitter Cards when there’s no featured image in a post, you should also design your own.</li>\n  <li>More customization please refer to theme-specific documentation</li>\n</ul>\n\n<h2 id=\"tips\">Tips</h2>\n\n<ul>\n  <li>Not familiar with <a href=\"https://daringfireball.net/projects/markdown/\">Markdown</a>? Try <a href=\"https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet\">Markdown Cheatsheet</a>.</li>\n  <li>You can use Jekyll’s <a href=\"https://jekyllrb.com/docs/templates/#code-snippet-highlighting\">built-in syntax highlighting</a>, I’ve included a default theme for this project.</li>\n  <li><a href=\"https://kramdown.gettalong.org/quickref.html#tables\">Tables</a> and <a href=\"https://kramdown.gettalong.org/quickref.html#footnotes\">footnotes</a> are also available to use.</li>\n</ul>",
      "excerpt": "Configuration Settings",
      "languages": null,
      "categories": ["note"],
      "tags": ["getting-started"]
    }
    
  

  
    ,
    {
      "title": "Themes",
      "permalink": "https://flxw.de/themes.html",
      "link": "https://flxw.de/themes.html",
      "date": "2014-06-10T00:00:00-07:00",
      
        "modified": "2022-10-22T06:05:10-07:00",
      
      "author": {
        "name": "Felix Wolff",
        "url": "https://flxw.de/",
        "email": "wolff.felix@proton.me"
      },
      "content": "<h2 id=\"overview\">Overview</h2>\n\n<p>In the latest build, I’ve added multiple themes support, finally, you can switch themes with just one command.</p>\n\n<p class=\"note\">This is an experimental feature and may change until the feature stabilizes.</p>\n\n<h2 id=\"installing-themes\">Installing Themes</h2>\n\n<p>The AMSF framework ships a default theme <a href=\"https://github.com/amsf/amsf-curtana\">Curtana</a>. You can also install as many themes as you like and switch to the one you prefer at any time.</p>\n\n<h3 id=\"via-git-github\">Via Git (GitHub)</h3>\n\n<p>The easiest way to install a new theme is via <code class=\"language-plaintext highlighter-rouge\">theme-add</code>, the following command will install theme Curtana from its official repo <code class=\"language-plaintext highlighter-rouge\">amsf/amsf-curtana</code>:</p>\n\n<div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>grunt theme-add <span class=\"nt\">--theme</span><span class=\"o\">=</span>curtana\n</code></pre></div></div>\n\n<p>If you’d install a custom theme from other users, append <code class=\"language-plaintext highlighter-rouge\">--user</code> in your command, the following command will install a new theme named <code class=\"language-plaintext highlighter-rouge\">bootstrap-sass</code> from <code class=\"language-plaintext highlighter-rouge\">sparanoid/amsf-bootstrap-sass</code></p>\n\n<div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>grunt theme-add <span class=\"nt\">--theme</span><span class=\"o\">=</span>bootstrap-sass <span class=\"nt\">--user</span><span class=\"o\">=</span>sparanoid\n</code></pre></div></div>\n\n<h3 id=\"manually-install\">Manually Install</h3>\n\n<p>You can also install themes manually. find an AMSF theme (Curtana, for example), download the package and uncompress all files to <code class=\"language-plaintext highlighter-rouge\">.amsf-cache/themes</code> directory, the file structure should look like:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>├── .amsf-cache/ (Almace Scaffolding cache directory)\n|   ├── themes/\n|   |   └── curtana/\n|   |   |   └── assets/\n|   |   |   └── includes/\n|   |   |   └── layouts/\n|   |   |   └── pages/\n|   |   |   └── config.yml\n└── _app/\n</code></pre></div></div>\n\n<p>Then execute the following command:</p>\n\n<div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>grunt activate <span class=\"nt\">--theme</span><span class=\"o\">=</span>curtana\n</code></pre></div></div>\n\n<p>Your current theme will be backed up to <code class=\"language-plaintext highlighter-rouge\">.amsf-cache/themes/your-old-theme/</code> and the new theme <code class=\"language-plaintext highlighter-rouge\">curtana</code> will be installed to the appropriate directories.</p>\n\n<h2 id=\"upgrading-themes\">Upgrading Themes</h2>\n\n<p>You can update your current activated theme by the following command. The activated theme will be downloaded from GitHub automatically if there’s any update:</p>\n\n<div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>grunt theme-update\n</code></pre></div></div>\n\n<p>Please note that only themes added via GitHub can be updated.</p>",
      "excerpt": "Overview",
      "languages": null,
      "categories": ["note"],
      "tags": ["customization"]
    }
    
  

  
    ,
    {
      "title": "Creating Your Own Theme",
      "permalink": "https://flxw.de/creating-themes.html",
      "link": "https://flxw.de/creating-themes.html",
      "date": "2014-06-09T00:00:00-07:00",
      
        "modified": "2022-10-22T06:05:10-07:00",
      
      "author": {
        "name": "Felix Wolff",
        "url": "https://flxw.de/",
        "email": "wolff.felix@proton.me"
      },
      "content": "<h2 id=\"overview\">Overview</h2>\n\n<p>You can create your own theme in AMSF, theme files are located in the following location (I use default theme Curtana here for better understanding):</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>├── _app/\n|   ├── _data/\n|   |   └── curtana.yml\n|   ├── _includes/\n|   |   └── themes/\n|   |   |   └── curtana/\n|   |   |   |   └── includes/\n|   |   |   |   └── layouts/\n|   ├── _pages/\n|   |   └── themes/\n|   |   |   └── curtana/\n|   |   |   |   └── example-page.md\n|   |   |   |   └── ...\n|   ├── assets/\n|   |   └── themes/\n|   |   |   └── curtana/\n|   |   |   |   └── _js/\n|   |   |   |   └── _scss/\n|   |   |   |   └── ...\n</code></pre></div></div>\n\n<p>The theme specific config <code class=\"language-plaintext highlighter-rouge\">curtana.yml</code> should have the same filename as your theme name. It should contain theme-specific variables and can also override AMSF built-in settings.</p>\n\n<p>More info about theme structure you can check out my default theme <a href=\"https://github.com/amsf/amsf-curtana\">Curtana</a>.</p>\n\n<p>You can also have multiple themes in your project, as many as you like. For example if you also have themes Bootstrap and Ghost installed, the file structure should be:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>├── _app/\n|   ├── _data/\n|   |   └── bootstrap.yml\n|   |   └── curtana.yml\n|   |   └── ghost.yml\n|   ├── _includes/\n|   |   └── themes/\n|   |   |   └── bootstrap/\n|   |   |   |   └── includes/\n|   |   |   |   └── layouts/\n|   |   |   └── curtana/\n|   |   |   |   └── includes/\n|   |   |   |   └── layouts/\n|   |   |   └── ghost/\n|   |   |   |   └── includes/\n|   |   |   |   └── layouts/\n|   ├── _pages/\n|   |   └── themes/\n|   |   |   └── bootstrap/\n|   |   |   |   └── example-about.md\n|   |   |   |   └── example-blog.md\n|   |   |   |   └── example-fluid-container.md\n|   |   |   |   └── ...\n|   |   |   └── curtana/\n|   |   |   |   └── example-about.md\n|   |   |   |   └── example-news.md\n|   |   |   |   └── ...\n|   |   |   └── ghost/\n|   |   |   |   └── example-archive.md\n|   |   |   |   └── example-page.md\n|   |   |   |   └── example-tagcloud.md\n|   |   |   |   └── ...\n|   ├── assets/\n|   |   └── themes/\n|   |   |   └── bootstrap/\n|   |   |   |   └── _coffee/\n|   |   |   |   └── _scss/\n|   |   |   |   └── images/\n|   |   |   └── curtana/\n|   |   |   |   └── _js/\n|   |   |   |   └── _scss/\n|   |   |   |   └── svg/\n|   |   |   └── ghost/\n|   |   |   |   └── _js/\n|   |   |   |   └── _less/\n|   |   |   |   └── fonts/\n...\n</code></pre></div></div>\n\n<h2 id=\"amsf-options\">AMSF Options</h2>\n\n<p>There’re several built-in options you can use in your theme. These options can also be overridden in theme-specific config.</p>\n\n<h3 id=\"sitename\"><code class=\"language-plaintext highlighter-rouge\">site.name</code></h3>\n\n<p>Template:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;footer</span> <span class=\"na\">class=</span><span class=\"s\">\"footer\"</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;ul&gt;</span>\n    <span class=\"nt\">&lt;li&gt;&lt;a</span> <span class=\"na\">href=</span><span class=\"s\">\"/\"</span><span class=\"nt\">&gt;</span>{{ site.name }}<span class=\"nt\">&lt;/a&gt;&lt;/li&gt;</span>\n    <span class=\"nt\">&lt;li&gt;&lt;a</span> <span class=\"na\">href=</span><span class=\"s\">\"/atom.xml\"</span><span class=\"nt\">&gt;</span>Atom<span class=\"nt\">&lt;/a&gt;&lt;/li&gt;</span>\n  <span class=\"nt\">&lt;/ul&gt;</span>\n<span class=\"nt\">&lt;/footer&gt;</span>\n</code></pre></div></div>\n\n<p>Output:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;footer</span> <span class=\"na\">class=</span><span class=\"s\">\"footer\"</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;ul&gt;</span>\n    <span class=\"nt\">&lt;li&gt;&lt;a</span> <span class=\"na\">href=</span><span class=\"s\">\"/\"</span><span class=\"nt\">&gt;</span>Almace Scaffolding<span class=\"nt\">&lt;/a&gt;&lt;/li&gt;</span>\n    <span class=\"nt\">&lt;li&gt;&lt;a</span> <span class=\"na\">href=</span><span class=\"s\">\"/atom.xml\"</span><span class=\"nt\">&gt;</span>Atom<span class=\"nt\">&lt;/a&gt;&lt;/li&gt;</span>\n  <span class=\"nt\">&lt;/ul&gt;</span>\n<span class=\"nt\">&lt;/footer&gt;</span>\n</code></pre></div></div>\n\n<h3 id=\"sitedescription\"><code class=\"language-plaintext highlighter-rouge\">site.description</code></h3>\n\n<p>Site description will appear in the document meta and Atom feed subtitle.</p>\n\n<p>Template:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;meta</span> <span class=\"na\">property=</span><span class=\"s\">\"og:description\"</span> <span class=\"na\">content=</span><span class=\"s\">\"{{ site.description }}\"</span><span class=\"nt\">&gt;</span>\n</code></pre></div></div>\n\n<p>Output:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;meta</span> <span class=\"na\">property=</span><span class=\"s\">\"og:description\"</span> <span class=\"na\">content=</span><span class=\"s\">\"A super-fast Jekyll framework fighting against the website obesity.\"</span><span class=\"nt\">&gt;</span>\n</code></pre></div></div>\n\n<h3 id=\"sitefile\"><code class=\"language-plaintext highlighter-rouge\">site.file</code></h3>\n\n<p>Media assets URL used in posts, without trailing slash. In most cases this URL should be powered by a CDN provider.</p>\n\n<p>Config:</p>\n\n<div class=\"language-yaml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"na\">file</span><span class=\"pi\">:</span> <span class=\"s\">//d349cztnlupsuf.cloudfront.net</span>\n</code></pre></div></div>\n\n<p>Template:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;img</span> <span class=\"na\">src=</span><span class=\"s\">\"{{ site.file }}/post-thumbnail.jpg\"</span><span class=\"nt\">&gt;</span>\n</code></pre></div></div>\n\n<p>Output:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;img</span> <span class=\"na\">src=</span><span class=\"s\">\"//d349cztnlupsuf.cloudfront.net/post-thumbnail.jpg\"</span><span class=\"nt\">&gt;</span>\n</code></pre></div></div>\n\n<h3 id=\"sitetwitter\"><code class=\"language-plaintext highlighter-rouge\">site.twitter</code></h3>\n\n<p>Site Twitter account handle.</p>\n\n<p>Template:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;a</span> <span class=\"na\">href=</span><span class=\"s\">\"https://twitter.com/{{ site.twitter }}\"</span><span class=\"nt\">&gt;</span>Follow @{{ site.twitter }} on Twitter<span class=\"nt\">&lt;/a&gt;</span>\n</code></pre></div></div>\n\n<p>Output:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;a</span> <span class=\"na\">href=</span><span class=\"s\">\"https://twitter.com/sparanoid\"</span><span class=\"nt\">&gt;</span>Follow @sparanoid on Twitter<span class=\"nt\">&lt;/a&gt;</span>\n</code></pre></div></div>\n\n<h3 id=\"siteforce_utf_8\"><code class=\"language-plaintext highlighter-rouge\">site.force_utf_8</code></h3>\n\n<p>Force UTF-8 encoding, enable this will simply add <code class=\"language-plaintext highlighter-rouge\">&lt;meta charset=\"utf-8\"&gt;</code> to the head of your pages.</p>\n\n<p>Template:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>{% if site.force_utf_8 %}\n  <span class=\"nt\">&lt;meta</span> <span class=\"na\">charset=</span><span class=\"s\">\"utf-8\"</span><span class=\"nt\">&gt;</span>\n{% endif %}\n</code></pre></div></div>\n\n<h3 id=\"siterobots\"><code class=\"language-plaintext highlighter-rouge\">site.robots</code></h3>\n\n<p>You can define your own records in <code class=\"language-plaintext highlighter-rouge\">robots.txt</code>.</p>\n\n<p>Config:</p>\n\n<div class=\"language-yaml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"na\">robots</span><span class=\"pi\">:</span>\n  <span class=\"pi\">-</span> <span class=\"s2\">\"</span><span class=\"s\">User-agent:</span><span class=\"nv\"> </span><span class=\"s\">*\"</span>\n  <span class=\"pi\">-</span> <span class=\"s2\">\"</span><span class=\"s\">Disallow:</span><span class=\"nv\"> </span><span class=\"s\">/ajax/\"</span>\n  <span class=\"pi\">-</span> <span class=\"s2\">\"</span><span class=\"s\">Disallow:</span><span class=\"nv\"> </span><span class=\"s\">/@async\"</span>\n  <span class=\"pi\">-</span> <span class=\"s2\">\"</span><span class=\"s\">Disallow:</span><span class=\"nv\"> </span><span class=\"s\">/log/\"</span>\n</code></pre></div></div>\n\n<h2 id=\"theme-features\">Theme Features</h2>\n\n<p>There’re some features can be integrated into your theme.</p>\n\n<h3 id=\"basic-multi-language-support\">(Basic) Multi-Language Support</h3>\n\n<p>You can define post/page language in your front-matter field:</p>\n\n<div class=\"language-yaml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"na\">lang</span><span class=\"pi\">:</span>\n  <span class=\"pi\">-</span> <span class=\"s\">zh-tw</span>\n</code></pre></div></div>\n\n<p>An additional <code class=\"language-plaintext highlighter-rouge\">lang</code> HTML attribute will be added to your final rendering:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;article</span> <span class=\"na\">lang=</span><span class=\"s\">\"zh-tw\"</span><span class=\"nt\">&gt;</span>\n  ...\n<span class=\"nt\">&lt;/article&gt;</span>\n</code></pre></div></div>\n\n<p>If your post/page content is multilingual, you can also define multiple languages in array:</p>\n\n<div class=\"language-yaml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"na\">lang</span><span class=\"pi\">:</span>\n  <span class=\"pi\">-</span> <span class=\"s\">zh-tw</span>\n  <span class=\"pi\">-</span> <span class=\"s\">en-us</span>\n</code></pre></div></div>\n\n<p>Please note that only the first item defined in <code class=\"language-plaintext highlighter-rouge\">lang</code> array will be used in final <code class=\"language-plaintext highlighter-rouge\">lang</code> output, the additional languages will be available in JSON feed output:</p>\n\n<div class=\"language-json highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">{</span><span class=\"w\">\n  </span><span class=\"nl\">\"languages\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s2\">\"zh-tw\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">\"en-us\"</span><span class=\"p\">],</span><span class=\"w\">\n  </span><span class=\"nl\">\"categories\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s2\">\"note\"</span><span class=\"p\">],</span><span class=\"w\">\n  </span><span class=\"nl\">\"tags\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s2\">\"miscellaneous\"</span><span class=\"p\">]</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre></div></div>\n\n<h3 id=\"smooshing-assets\">Smooshing Assets</h3>\n\n<p>For better performance, Almace Scaffolding will find all the CSS, script links and images in compiled HTML, and outputs a version with all the CSS, scripts and images (Base64) written inline. Sounds cool? but it needs theme support. Here’s how:</p>\n\n<p>You can simply add the query string <code class=\"language-plaintext highlighter-rouge\">?assets-inline</code> at the end of the file you’d like to be inlined in production site:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c\">&lt;!-- This CSS will be inlined into HTML --&gt;</span>\n<span class=\"nt\">&lt;link</span> <span class=\"na\">rel=</span><span class=\"s\">\"stylesheet\"</span> <span class=\"na\">href=</span><span class=\"s\">\"{{ '/css/app.css?assets-inline' | prepend: amsf_theme_assets }}\"</span><span class=\"nt\">&gt;</span>\n\n<span class=\"c\">&lt;!-- This script will be inlined into HTML --&gt;</span>\n<span class=\"nt\">&lt;script </span><span class=\"na\">src=</span><span class=\"s\">\"{{ '/js/app.js?assets-inline' | prepend: amsf_theme_assets }}\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span>\n</code></pre></div></div>\n\n<h3 id=\"user-custom-styles-support\">User Custom Styles Support</h3>\n\n<p>Define the following code snippet into your theme styles (Sass) will allow users to custom your theme without touching the theme files:</p>\n\n<div class=\"language-css highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"o\">//</span> <span class=\"nt\">Import</span> <span class=\"nt\">user</span> <span class=\"nt\">custom</span> <span class=\"nt\">styles</span>\n<span class=\"k\">@import</span> <span class=\"s1\">\"../../../_scss/custom\"</span><span class=\"p\">;</span>\n</code></pre></div></div>\n\n<h3 id=\"user-custom-scripts-support\">User Custom Scripts Support</h3>\n\n<p>Define the following code snippet into your theme template (it’s recommended to put it in footer) will allow users to add custom scripts without touching the theme files:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c\">&lt;!-- User custom scripts --&gt;</span>\n<span class=\"nt\">&lt;script </span><span class=\"na\">src=</span><span class=\"s\">\"{{ '/js/user.js?assets-inline' | prepend: amsf_user_assets }}\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span>\n</code></pre></div></div>\n\n<h3 id=\"page--post-specific-css-block-support\">Page / Post Specific CSS Block Support</h3>\n\n<p>This allows your user to define page / post specific CSS blocks in front-matter data:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c\">&lt;!-- Page-wide custom CSS --&gt;</span>\n{{ amsf_page_css }}\n</code></pre></div></div>\n\n<h3 id=\"google-analytics-support\">Google Analytics Support</h3>\n\n<p>This allows your user to be able to use Google Analytics for their site, tracking ID can be changed in the config file:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c\">&lt;!-- Google Analytics tracking code --&gt;</span>\n{{ amsf_google_analytics }}\n</code></pre></div></div>\n\n<h3 id=\"post-published-time\">Post Published Time</h3>\n\n<p>This allows you to get the published time of the current post.</p>\n\n<p>Template:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;meta</span> <span class=\"na\">property=</span><span class=\"s\">\"article:published_time\"</span> <span class=\"na\">content=</span><span class=\"s\">\"{{ amsf_page_pubdate | date_to_xmlschema }}\"</span><span class=\"nt\">&gt;</span>\n</code></pre></div></div>\n\n<p>Output:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;meta</span> <span class=\"na\">property=</span><span class=\"s\">\"article:published_time\"</span> <span class=\"na\">content=</span><span class=\"s\">\"2014-01-01T00:00:00+08:00\"</span><span class=\"nt\">&gt;</span>\n</code></pre></div></div>\n\n<h3 id=\"post-modified-time\">Post Modified Time</h3>\n\n<p>This allows you to get the modified time of the current post.</p>\n\n<p>Template:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;meta</span> <span class=\"na\">property=</span><span class=\"s\">\"article:modified_time\"</span> <span class=\"na\">content=</span><span class=\"s\">\"{{ amsf_page_update | date_to_xmlschema }}\"</span><span class=\"nt\">&gt;</span>\n</code></pre></div></div>\n\n<p>Output:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;meta</span> <span class=\"na\">property=</span><span class=\"s\">\"article:modified_time\"</span> <span class=\"na\">content=</span><span class=\"s\">\"2014-01-03T03:17:49+08:00\"</span><span class=\"nt\">&gt;</span>\n</code></pre></div></div>\n\n<h3 id=\"post-reading-time\">Post Reading Time</h3>\n\n<p>This allows you to show the average reading time of current post.</p>\n\n<p>Template:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>Reading time: {{ amsf_page_reading_time }}\n</code></pre></div></div>\n\n<p>Output:</p>\n\n<div class=\"language-md highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"gh\"># Less than 200 words</span>\nReading time: Less than 1 min\n\n<span class=\"gh\"># Around 200 words</span>\nReading time: 1 min\n\n<span class=\"gh\"># More than 200 words</span>\nReading time: 34 mins\n\n<span class=\"gh\"># More than 1 hour</span>\nReading time: 1 hr\nReading time: 1 hr 1 min\nReading time: 3 hrs 20 mins\n</code></pre></div></div>\n\n<h2 id=\"publishing-themes\">Publishing Themes</h2>\n\n<p>You really like your custom design and wanna show it off to the world? Cool, you can create (pack) you own theme by the following command:</p>\n\n<div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>grunt theme-save\n</code></pre></div></div>\n\n<p>The activated theme will be saved to AMSF cache (<code class=\"language-plaintext highlighter-rouge\">.amsf-cache/</code>) with correct file and directory structure, then you can upload your theme to GitHub.</p>\n\n<p>Still confusing? see my default theme <a href=\"https://github.com/amsf/amsf-curtana\">Curtana</a> for reference.</p>",
      "excerpt": "Overview",
      "languages": null,
      "categories": ["note"],
      "tags": ["customization"]
    }
    
  

  
    ,
    {
      "title": "Syntax Highlighting",
      "permalink": "https://flxw.de/syntax-highlighting.html",
      "link": "https://flxw.de/syntax-highlighting.html",
      "date": "2014-06-06T00:00:00-07:00",
      
        "modified": "2022-10-22T06:05:10-07:00",
      
      "author": {
        "name": "Felix Wolff",
        "url": "https://flxw.de/",
        "email": "wolff.felix@proton.me"
      },
      "content": "<p>Code highlighting demo, powered by Rouge. More info about code highlighting can be found at <a href=\"https://jekyllrb.com/docs/templates/#code-snippet-highlighting\">Jekyll’s documentation</a>.</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>.code-text (@link, @text) when (lightness(@link) &gt;= 50%) and (lightness(@link) &lt; lightness(@text)) {\n  @return-color: lighten(@text, 20%);\n  @return-value: 30%;\n}\n</code></pre></div></div>\n\n<div class=\"language-diff highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"err\">{</span>\n  \"scripts\": {\n<span class=\"gd\">-   \"precommit\": \"npm test\",\n-   \"commitmsg\": \"commitlint -E GIT_PARAMS\"\n</span>  },\n<span class=\"gi\">+ \"husky\": {\n+   \"hooks\": {\n+     \"pre-commit\": \"npm test\",\n+     \"commit-msg\": \"commitlint -E HUSKY_GIT_PARAMS\"\n+   }\n+ }\n</span><span class=\"err\">}</span>\n</code></pre></div></div>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">show</span>\n  <span class=\"vi\">@widget</span> <span class=\"o\">=</span> <span class=\"no\">Widget</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"p\">[</span><span class=\"ss\">:id</span><span class=\"p\">])</span>\n  <span class=\"n\">respond_to</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"nb\">format</span><span class=\"o\">|</span>\n    <span class=\"nb\">format</span><span class=\"p\">.</span><span class=\"nf\">html</span> <span class=\"c1\"># show.html.erb</span>\n    <span class=\"nb\">format</span><span class=\"p\">.</span><span class=\"nf\">json</span> <span class=\"p\">{</span> <span class=\"n\">render</span> <span class=\"ss\">json: </span><span class=\"vi\">@widget</span> <span class=\"p\">}</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n</code></pre></div></div>\n\n<div class=\"language-php highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">echo</span> <span class=\"s2\">\"Hello, world!\"</span><span class=\"p\">;</span>\n</code></pre></div></div>\n\n<figure class=\"highlight\"><pre><code class=\"language-ruby\" data-lang=\"ruby\"><span class=\"k\">def</span> <span class=\"nf\">print_hi</span><span class=\"p\">(</span><span class=\"nb\">name</span><span class=\"p\">)</span>\n  <span class=\"nb\">puts</span> <span class=\"s2\">\"Hi, </span><span class=\"si\">#{</span><span class=\"nb\">name</span><span class=\"si\">}</span><span class=\"s2\">\"</span>\n<span class=\"k\">end</span>\n<span class=\"n\">print_hi</span><span class=\"p\">(</span><span class=\"s1\">'Tom'</span><span class=\"p\">)</span>\n<span class=\"c1\">#=&gt; prints 'Hi, Tom' to STDOUT.</span></code></pre></figure>\n\n<figure class=\"highlight\"><pre><code class=\"language-html\" data-lang=\"html\"><table class=\"rouge-table\"><tbody><tr><td class=\"gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n</pre></td><td class=\"code\"><pre><span class=\"cp\">&lt;!doctype html&gt;</span>\n<span class=\"nt\">&lt;html&gt;</span>\n  <span class=\"nt\">&lt;head&gt;</span>\n    <span class=\"nt\">&lt;title&gt;</span>Title!<span class=\"nt\">&lt;/title&gt;</span>\n  <span class=\"nt\">&lt;/head&gt;</span>\n  <span class=\"nt\">&lt;body&gt;</span>\n    <span class=\"nt\">&lt;h1</span> <span class=\"na\">id=</span><span class=\"s\">\"title\"</span> <span class=\"na\">class=</span><span class=\"s\">\"heading\"</span><span class=\"nt\">&gt;</span>Example<span class=\"nt\">&lt;/h1&gt;</span>\n    <span class=\"nt\">&lt;p</span> <span class=\"na\">id=</span><span class=\"s\">\"foo\"</span><span class=\"nt\">&gt;</span>Hello, World!<span class=\"nt\">&lt;/p&gt;</span>\n    <span class=\"nt\">&lt;script </span><span class=\"na\">type=</span><span class=\"s\">\"text/javascript\"</span><span class=\"nt\">&gt;</span><span class=\"kd\">var</span> <span class=\"nx\">a</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"nt\">&lt;/script&gt;</span>\n    <span class=\"nt\">&lt;style </span><span class=\"na\">type=</span><span class=\"s\">\"text/css\"</span><span class=\"nt\">&gt;</span><span class=\"nf\">#foo</span> <span class=\"p\">{</span> <span class=\"nl\">font-weight</span><span class=\"p\">:</span> <span class=\"nb\">bold</span><span class=\"p\">;</span> <span class=\"p\">}</span><span class=\"nt\">&lt;/style&gt;</span>\n  <span class=\"nt\">&lt;/body&gt;</span>\n<span class=\"nt\">&lt;/html&gt;</span>\n</pre></td></tr></tbody></table></code></pre></figure>\n\n<div class=\"language-js highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\">// Load the http module to create an http server.</span>\n<span class=\"kd\">var</span> <span class=\"nx\">http</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">http</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\n<span class=\"c1\">// Configure our HTTP server to respond with Hello World to all requests.</span>\n<span class=\"kd\">var</span> <span class=\"nx\">server</span> <span class=\"o\">=</span> <span class=\"nx\">http</span><span class=\"p\">.</span><span class=\"nx\">createServer</span><span class=\"p\">(</span><span class=\"kd\">function</span> <span class=\"p\">(</span><span class=\"nx\">request</span><span class=\"p\">,</span> <span class=\"nx\">response</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"nx\">response</span><span class=\"p\">.</span><span class=\"nx\">writeHead</span><span class=\"p\">(</span><span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"dl\">\"</span><span class=\"s2\">Content-Type</span><span class=\"dl\">\"</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">text/plain</span><span class=\"dl\">\"</span><span class=\"p\">});</span>\n  <span class=\"nx\">response</span><span class=\"p\">.</span><span class=\"nx\">end</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">Hello World</span><span class=\"se\">\\n</span><span class=\"dl\">\"</span><span class=\"p\">);</span>\n<span class=\"p\">});</span>\n\n<span class=\"c1\">// Listen on port 8000, IP defaults to 127.0.0.1</span>\n<span class=\"nx\">server</span><span class=\"p\">.</span><span class=\"nx\">listen</span><span class=\"p\">(</span><span class=\"mi\">8000</span><span class=\"p\">);</span>\n\n<span class=\"c1\">// Put a friendly message on the terminal</span>\n<span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">Server running at https://127.0.0.1:8000/</span><span class=\"dl\">\"</span><span class=\"p\">);</span>\n</code></pre></div></div>\n\n<div class=\"language-css highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nc\">.code-text</span> <span class=\"o\">(</span><span class=\"k\">@link</span><span class=\"p\">,</span> <span class=\"err\">@</span><span class=\"nb\">text</span><span class=\"p\">)</span> <span class=\"n\">when</span> <span class=\"p\">(</span><span class=\"n\">lightness</span><span class=\"p\">(</span><span class=\"err\">@</span><span class=\"n\">link</span><span class=\"p\">)</span> <span class=\"err\">&gt;=</span> <span class=\"m\">50%</span><span class=\"p\">)</span> <span class=\"n\">and</span> <span class=\"p\">(</span><span class=\"n\">lightness</span><span class=\"p\">(</span><span class=\"err\">@</span><span class=\"n\">link</span><span class=\"p\">)</span> <span class=\"err\">&lt;</span> <span class=\"n\">lightness</span><span class=\"p\">(</span><span class=\"err\">@</span><span class=\"nb\">text</span><span class=\"p\">))</span> <span class=\"p\">{</span>\n  <span class=\"k\">@return-color</span><span class=\"p\">:</span> <span class=\"n\">lighten</span><span class=\"p\">(</span><span class=\"err\">@</span><span class=\"nb\">text</span><span class=\"p\">,</span> <span class=\"m\">20%</span><span class=\"p\">);</span>\n  <span class=\"k\">@return-value</span><span class=\"p\">:</span> <span class=\"m\">30%</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"cp\">&lt;!doctype html&gt;</span>\n<span class=\"nt\">&lt;html&gt;</span>\n  <span class=\"nt\">&lt;head&gt;</span>\n    <span class=\"nt\">&lt;title&gt;</span>Title!<span class=\"nt\">&lt;/title&gt;</span>\n  <span class=\"nt\">&lt;/head&gt;</span>\n  <span class=\"nt\">&lt;body&gt;</span>\n    <span class=\"nt\">&lt;h1</span> <span class=\"na\">id=</span><span class=\"s\">\"title\"</span> <span class=\"na\">class=</span><span class=\"s\">\"heading\"</span><span class=\"nt\">&gt;</span>Example<span class=\"nt\">&lt;/h1&gt;</span>\n    <span class=\"nt\">&lt;p</span> <span class=\"na\">id=</span><span class=\"s\">\"foo\"</span><span class=\"nt\">&gt;</span>Hello, World!<span class=\"nt\">&lt;/p&gt;</span>\n    <span class=\"nt\">&lt;script </span><span class=\"na\">type=</span><span class=\"s\">\"text/javascript\"</span><span class=\"nt\">&gt;</span><span class=\"kd\">var</span> <span class=\"nx\">a</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"nt\">&lt;/script&gt;</span>\n    <span class=\"nt\">&lt;style </span><span class=\"na\">type=</span><span class=\"s\">\"text/css\"</span><span class=\"nt\">&gt;</span><span class=\"nf\">#foo</span> <span class=\"p\">{</span> <span class=\"nl\">font-weight</span><span class=\"p\">:</span> <span class=\"nb\">bold</span><span class=\"p\">;</span> <span class=\"p\">}</span><span class=\"nt\">&lt;/style&gt;</span>\n  <span class=\"nt\">&lt;/body&gt;</span>\n<span class=\"nt\">&lt;/html&gt;</span>\n</code></pre></div></div>\n\n<div class=\"language-llvm highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\">; copied from https://llvm.org/docs/LangRef.html#module-structure</span>\n<span class=\"c1\">; Declare the string constant as a global constant.</span>\n<span class=\"vg\">@.str</span> <span class=\"p\">=</span> <span class=\"k\">private</span> <span class=\"k\">unnamed_addr</span> <span class=\"k\">constant</span> <span class=\"p\">[</span><span class=\"m\">13</span> <span class=\"p\">x</span> <span class=\"kt\">i8</span><span class=\"p\">]</span> <span class=\"s\">c\"hello world\\0A\\00\"</span>\n\n<span class=\"c1\">; External declaration of the puts function</span>\n<span class=\"k\">declare</span> <span class=\"kt\">i32</span> <span class=\"vg\">@puts</span><span class=\"p\">(</span><span class=\"kt\">i8</span><span class=\"p\">*</span> <span class=\"k\">nocapture</span><span class=\"p\">)</span> <span class=\"k\">nounwind</span>\n\n<span class=\"c1\">; Definition of main function</span>\n<span class=\"k\">define</span> <span class=\"kt\">i32</span> <span class=\"vg\">@main</span><span class=\"p\">()</span> <span class=\"p\">{</span>   <span class=\"c1\">; i32()*</span>\n  <span class=\"c1\">; Convert [13 x i8]* to i8  *...</span>\n  <span class=\"nv\">%cast210</span> <span class=\"p\">=</span> <span class=\"k\">getelementptr</span> <span class=\"p\">[</span><span class=\"m\">13</span> <span class=\"p\">x</span> <span class=\"kt\">i8</span><span class=\"p\">]*</span> <span class=\"vg\">@.str</span><span class=\"p\">,</span> <span class=\"kt\">i64</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"kt\">i64</span> <span class=\"m\">0</span>\n\n  <span class=\"c1\">; Call puts function to write out the string to stdout.</span>\n  <span class=\"k\">call</span> <span class=\"kt\">i32</span> <span class=\"vg\">@puts</span><span class=\"p\">(</span><span class=\"kt\">i8</span><span class=\"p\">*</span> <span class=\"nv\">%cast210</span><span class=\"p\">)</span>\n  <span class=\"k\">ret</span> <span class=\"kt\">i32</span> <span class=\"m\">0</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\">; Named metadata</span>\n<span class=\"nv\">!1</span> <span class=\"p\">=</span> <span class=\"kt\">metadata</span> <span class=\"p\">!{</span><span class=\"kt\">i32</span> <span class=\"m\">42</span><span class=\"p\">}</span>\n<span class=\"nv\">!foo</span> <span class=\"p\">=</span> <span class=\"p\">!{</span><span class=\"nv\">!1</span><span class=\"p\">,</span> <span class=\"k\">null</span><span class=\"p\">}</span>\n</code></pre></div></div>\n\n<div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"cp\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</span>\n<span class=\"nt\">&lt;xsl:template</span> <span class=\"na\">match=</span><span class=\"s\">\"/\"</span><span class=\"nt\">&gt;&lt;/xsl:template&gt;</span>\n</code></pre></div></div>\n\n<div class=\"language-moonscript highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">util</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">require</span><span class=\"w\"> </span><span class=\"s2\">\"my.module\"</span><span class=\"w\">\n\n</span><span class=\"n\">a_table</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n  </span><span class=\"ss\">foo:</span><span class=\"w\"> </span><span class=\"s1\">'bar'</span><span class=\"w\">\n  </span><span class=\"ss\">interpolated:</span><span class=\"w\"> </span><span class=\"s2\">\"foo-</span><span class=\"si\">#{</span><span class=\"n\">other</span><span class=\"p\">.</span><span class=\"n\">stuff</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"w\">\n  </span><span class=\"ss\">\"string\":</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\">\n  </span><span class=\"ss\">do:</span><span class=\"w\"> </span><span class=\"s1\">'keyword'</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n\n</span><span class=\"k\">class</span><span class=\"w\"> </span><span class=\"nc\">MyClass</span><span class=\"w\"> </span><span class=\"k\">extends</span><span class=\"w\"> </span><span class=\"nc\">SomeClass</span><span class=\"w\">\n  </span><span class=\"ss\">new:</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"vi\">@init</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">arg2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s1\">'default'</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\">\n    </span><span class=\"vi\">@derived</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"vi\">@init</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\">\n    </span><span class=\"k\">super</span><span class=\"o\">!</span><span class=\"w\">\n\n  </span><span class=\"ss\">other:</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\">\n    </span><span class=\"vi\">@foo</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\">\n</span></code></pre></div></div>\n\n<div class=\"language-apache highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nc\">AddDefaultCharset</span> UTF-8\n\n<span class=\"nc\">RewriteEngine</span> <span class=\"ss\">On</span>\n\n<span class=\"c\"># Serve gzipped version if available and accepted</span>\n<span class=\"nc\">AddEncoding</span> x-gzip .gz\n<span class=\"nc\">RewriteCond</span> %{HTTP:Accept-Encoding} gzip\n<span class=\"nc\">RewriteCond</span> %{REQUEST_FILENAME}.gz -f\n<span class=\"nc\">RewriteRule</span> ^(.*)$ $1.gz [QSA,L]\n<span class=\"p\">&lt;</span><span class=\"nl\">FilesMatch</span><span class=\"sr\"> \\.css\\.gz$</span><span class=\"p\">&gt;\n</span>  <span class=\"nc\">ForceType</span> text/css\n  <span class=\"nc\">Header</span> <span class=\"ss\">append</span> Vary Accept-Encoding\n<span class=\"p\">&lt;/</span><span class=\"nl\">FilesMatch</span><span class=\"p\">&gt;\n&lt;</span><span class=\"nl\">FilesMatch</span><span class=\"sr\"> \\.js\\.gz$</span><span class=\"p\">&gt;\n</span>  <span class=\"nc\">ForceType</span> application/javascript\n  <span class=\"nc\">Header</span> <span class=\"ss\">append</span> Vary Accept-Encoding\n<span class=\"p\">&lt;/</span><span class=\"nl\">FilesMatch</span><span class=\"p\">&gt;\n&lt;</span><span class=\"nl\">FilesMatch</span><span class=\"sr\"> \\.html\\.gz$</span><span class=\"p\">&gt;\n</span>  <span class=\"nc\">ForceType</span> text/html\n  <span class=\"nc\">Header</span> <span class=\"ss\">append</span> Vary Accept-Encoding\n<span class=\"p\">&lt;/</span><span class=\"nl\">FilesMatch</span><span class=\"p\">&gt;\n</span></code></pre></div></div>\n\n<div class=\"language-prolog highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"ss\">diff</span><span class=\"p\">(</span><span class=\"ss\">plus</span><span class=\"p\">(</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"nv\">B</span><span class=\"p\">),</span> <span class=\"nv\">X</span><span class=\"p\">,</span> <span class=\"ss\">plus</span><span class=\"p\">(</span><span class=\"nv\">DA</span><span class=\"p\">,</span> <span class=\"nv\">DB</span><span class=\"p\">))</span>\n   <span class=\"o\">&lt;=</span> <span class=\"ss\">diff</span><span class=\"p\">(</span><span class=\"nv\">A</span><span class=\"p\">,</span> <span class=\"nv\">X</span><span class=\"p\">,</span> <span class=\"nv\">DA</span><span class=\"p\">)</span> <span class=\"ss\">and</span> <span class=\"ss\">diff</span><span class=\"p\">(</span><span class=\"nv\">B</span><span class=\"p\">,</span> <span class=\"nv\">X</span><span class=\"p\">,</span> <span class=\"nv\">DB</span><span class=\"p\">).</span>\n\n<span class=\"ss\">diff</span><span class=\"p\">(</span><span class=\"ss\">times</span><span class=\"p\">(</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"nv\">B</span><span class=\"p\">),</span> <span class=\"nv\">X</span><span class=\"p\">,</span> <span class=\"ss\">plus</span><span class=\"p\">(</span><span class=\"ss\">times</span><span class=\"p\">(</span><span class=\"nv\">A</span><span class=\"p\">,</span> <span class=\"nv\">DB</span><span class=\"p\">),</span> <span class=\"ss\">times</span><span class=\"p\">(</span><span class=\"nv\">DA</span><span class=\"p\">,</span> <span class=\"nv\">B</span><span class=\"p\">)))</span>\n   <span class=\"o\">&lt;=</span> <span class=\"ss\">diff</span><span class=\"p\">(</span><span class=\"nv\">A</span><span class=\"p\">,</span> <span class=\"nv\">X</span><span class=\"p\">,</span> <span class=\"nv\">DA</span><span class=\"p\">)</span> <span class=\"ss\">and</span> <span class=\"ss\">diff</span><span class=\"p\">(</span><span class=\"nv\">B</span><span class=\"p\">,</span> <span class=\"nv\">X</span><span class=\"p\">,</span> <span class=\"nv\">DB</span><span class=\"p\">).</span>\n\n<span class=\"ss\">equal</span><span class=\"p\">(</span><span class=\"nv\">X</span><span class=\"p\">,</span> <span class=\"nv\">X</span><span class=\"p\">).</span>\n<span class=\"ss\">diff</span><span class=\"p\">(</span><span class=\"nv\">X</span><span class=\"p\">,</span> <span class=\"nv\">X</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">).</span>\n<span class=\"ss\">diff</span><span class=\"p\">(</span><span class=\"nv\">Y</span><span class=\"p\">,</span> <span class=\"nv\">X</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">)</span> <span class=\"o\">&lt;=</span> <span class=\"ss\">not</span> <span class=\"ss\">equal</span><span class=\"p\">(</span><span class=\"nv\">Y</span><span class=\"p\">,</span> <span class=\"nv\">X</span><span class=\"p\">).</span>\n</code></pre></div></div>\n\n<div class=\"language-ocaml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c\">(* Binary tree with leaves car­rying an integer. *)</span>\n<span class=\"k\">type</span> <span class=\"n\">tree</span> <span class=\"o\">=</span> <span class=\"nc\">Leaf</span> <span class=\"k\">of</span> <span class=\"kt\">int</span> <span class=\"o\">|</span> <span class=\"nc\">Node</span> <span class=\"k\">of</span> <span class=\"n\">tree</span> <span class=\"o\">*</span> <span class=\"n\">tree</span>\n\n<span class=\"k\">let</span> <span class=\"k\">rec</span> <span class=\"n\">exists_leaf</span> <span class=\"n\">test</span> <span class=\"n\">tree</span> <span class=\"o\">=</span>\n  <span class=\"k\">match</span> <span class=\"n\">tree</span> <span class=\"k\">with</span>\n  <span class=\"o\">|</span> <span class=\"nc\">Leaf</span> <span class=\"n\">v</span> <span class=\"o\">-&gt;</span> <span class=\"n\">test</span> <span class=\"n\">v</span>\n  <span class=\"o\">|</span> <span class=\"nc\">Node</span> <span class=\"p\">(</span><span class=\"n\">left</span><span class=\"o\">,</span> <span class=\"n\">right</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span>\n      <span class=\"n\">exists_leaf</span> <span class=\"n\">test</span> <span class=\"n\">left</span>\n      <span class=\"o\">||</span> <span class=\"n\">exists_leaf</span> <span class=\"n\">test</span> <span class=\"n\">right</span>\n\n<span class=\"k\">let</span> <span class=\"n\">has_even_leaf</span> <span class=\"n\">tree</span> <span class=\"o\">=</span>\n  <span class=\"n\">exists_leaf</span> <span class=\"p\">(</span><span class=\"k\">fun</span> <span class=\"n\">n</span> <span class=\"o\">-&gt;</span> <span class=\"n\">n</span> <span class=\"ow\">mod</span> <span class=\"mi\">2</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"n\">tree</span>\n</code></pre></div></div>\n\n<div class=\"language-sql highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">SELECT</span> <span class=\"o\">*</span> <span class=\"k\">FROM</span> <span class=\"nv\">`users`</span> <span class=\"k\">WHERE</span> <span class=\"nv\">`user`</span><span class=\"p\">.</span><span class=\"nv\">`id`</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n</code></pre></div></div>\n\n<div class=\"language-smalltalk highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nf\">quadMultiply:</span> <span class=\"nv\">i1</span> <span class=\"nf\">and:</span> <span class=\"nv\">i2</span>\n    <span class=\"c\">\"This method multiplies the given numbers by each other\n    and the result by 4.\"</span>\n    <span class=\"p\">|</span><span class=\"nv\"> mul </span><span class=\"p\">|</span>\n    <span class=\"nv\">mul</span> <span class=\"o\">:=</span> <span class=\"nv\">i1</span> <span class=\"nf\">*</span> <span class=\"nv\">i2</span><span class=\"p\">.</span>\n    <span class=\"o\">^</span><span class=\"nv\">mul</span> <span class=\"nf\">*</span> <span class=\"m\">4</span>\n</code></pre></div></div>\n\n<div class=\"language-racket highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"o\">#</span><span class=\"nv\">lang</span> <span class=\"nv\">racket</span>\n\n<span class=\"c1\">;; draw a graph of cos and deriv^3(cos)</span>\n<span class=\"p\">(</span><span class=\"k\">require</span> <span class=\"nv\">plot</span><span class=\"p\">)</span>\n<span class=\"p\">(</span><span class=\"k\">define</span> <span class=\"p\">((</span><span class=\"nf\">deriv</span> <span class=\"nv\">f</span><span class=\"p\">)</span> <span class=\"nv\">x</span><span class=\"p\">)</span>\n  <span class=\"p\">(</span><span class=\"nb\">/</span> <span class=\"p\">(</span><span class=\"nb\">-</span> <span class=\"p\">(</span><span class=\"nf\">f</span> <span class=\"nv\">x</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"nf\">f</span> <span class=\"p\">(</span><span class=\"nb\">-</span> <span class=\"nv\">x</span> <span class=\"mf\">0.001</span><span class=\"p\">)))</span> <span class=\"mf\">0.001</span><span class=\"p\">))</span>\n<span class=\"p\">(</span><span class=\"k\">define</span> <span class=\"p\">(</span><span class=\"nf\">thrice</span> <span class=\"nv\">f</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"p\">(</span><span class=\"nf\">x</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"nf\">f</span> <span class=\"p\">(</span><span class=\"nf\">f</span> <span class=\"p\">(</span><span class=\"nf\">f</span> <span class=\"nv\">x</span><span class=\"p\">)))))</span>\n<span class=\"p\">(</span><span class=\"nf\">plot</span> <span class=\"p\">(</span><span class=\"nb\">list</span> <span class=\"p\">(</span><span class=\"nf\">function</span> <span class=\"p\">((</span><span class=\"nf\">thrice</span> <span class=\"nv\">deriv</span><span class=\"p\">)</span> <span class=\"nv\">sin</span><span class=\"p\">)</span> <span class=\"mi\">-5</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n            <span class=\"p\">(</span><span class=\"nf\">function</span> <span class=\"nv\">cos</span> <span class=\"mi\">-5</span> <span class=\"mi\">5</span> <span class=\"nt\">#:color</span> <span class=\"ss\">'blue</span><span class=\"p\">)))</span>\n\n<span class=\"c1\">;; Print the Greek alphabet</span>\n<span class=\"p\">(</span><span class=\"nf\">for</span> <span class=\"p\">([</span><span class=\"nf\">i</span> <span class=\"p\">(</span><span class=\"nf\">in-range</span> <span class=\"mi\">25</span><span class=\"p\">)])</span>\n  <span class=\"p\">(</span><span class=\"nb\">displayln</span>\n   <span class=\"p\">(</span><span class=\"nb\">integer-&gt;char</span>\n    <span class=\"p\">(</span><span class=\"nb\">+</span> <span class=\"nv\">i</span> <span class=\"p\">(</span><span class=\"nb\">char-&gt;integer</span> <span class=\"sc\">#\\u3B1</span><span class=\"p\">)))))</span>\n\n<span class=\"c1\">;; An echo server</span>\n<span class=\"p\">(</span><span class=\"k\">define</span> <span class=\"nv\">listener</span> <span class=\"p\">(</span><span class=\"k\">tcp-listen</span> <span class=\"mi\">12345</span><span class=\"p\">))</span>\n<span class=\"p\">(</span><span class=\"k\">let</span> <span class=\"nv\">echo-server</span> <span class=\"p\">()</span>\n  <span class=\"p\">(</span><span class=\"k\">define-values</span> <span class=\"p\">(</span><span class=\"nf\">in</span> <span class=\"nv\">out</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"k\">tcp-accept</span> <span class=\"nv\">listener</span><span class=\"p\">))</span>\n  <span class=\"p\">(</span><span class=\"nb\">thread</span> <span class=\"p\">(</span><span class=\"k\">λ</span> <span class=\"p\">()</span>\n             <span class=\"p\">(</span><span class=\"nf\">copy-port</span> <span class=\"nv\">in</span> <span class=\"nv\">out</span><span class=\"p\">)</span>\n             <span class=\"p\">(</span><span class=\"nb\">close-output-port</span> <span class=\"nv\">out</span><span class=\"p\">)))</span>\n  <span class=\"p\">(</span><span class=\"nf\">echo-server</span><span class=\"p\">))</span>\n</code></pre></div></div>\n\n<div class=\"language-puppet highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">service</span> <span class=\"p\">{</span> <span class=\"s1\">'ntp'</span><span class=\"p\">:</span>\n  <span class=\"py\">name</span>      <span class=\"p\">=&gt;</span> <span class=\"nv\">$service_name</span><span class=\"p\">,</span>\n  <span class=\"py\">ensure</span>    <span class=\"p\">=&gt;</span> <span class=\"n\">running</span><span class=\"p\">,</span>\n  <span class=\"py\">enable</span>    <span class=\"p\">=&gt;</span> <span class=\"kc\">true</span><span class=\"p\">,</span>\n  <span class=\"kp\">subscribe</span> <span class=\"p\">=&gt;</span> <span class=\"nc\">File</span><span class=\"p\">[</span><span class=\"s1\">'ntp.conf'</span><span class=\"p\">],</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<div class=\"language-dart highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kt\">void</span> <span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n  <span class=\"kd\">var</span> <span class=\"n\">collection</span><span class=\"o\">=[</span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"mi\">3</span><span class=\"o\">,</span><span class=\"mi\">4</span><span class=\"o\">,</span><span class=\"mi\">5</span><span class=\"o\">];</span>\n  <span class=\"k\">for</span><span class=\"o\">(</span><span class=\"kd\">var</span> <span class=\"n\">a</span> <span class=\"k\">in</span> <span class=\"n\">collection</span><span class=\"o\">){</span>\n    <span class=\"n\">print</span><span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">);</span>\n  <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</code></pre></div></div>\n\n<div class=\"language-tcl highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>proc cross_sum <span class=\"p\">{</span>s<span class=\"p\">}</span> <span class=\"p\">{</span>expr <span class=\"p\">[</span>join <span class=\"p\">[</span>split $s <span class=\"s2\">\"\"</span><span class=\"p\">]</span> +<span class=\"p\">]}</span>\n</code></pre></div></div>\n\n<div class=\"language-csharp highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\">// reverse byte order (16-bit)</span>\n<span class=\"k\">public</span> <span class=\"k\">static</span> <span class=\"n\">UInt16</span> <span class=\"nf\">ReverseBytes</span><span class=\"p\">(</span><span class=\"n\">UInt16</span> <span class=\"k\">value</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n  <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"n\">UInt16</span><span class=\"p\">)((</span><span class=\"k\">value</span> <span class=\"p\">&amp;</span> <span class=\"m\">0xFFU</span><span class=\"p\">)</span> <span class=\"p\">&lt;&lt;</span> <span class=\"m\">8</span> <span class=\"p\">|</span> <span class=\"p\">(</span><span class=\"k\">value</span> <span class=\"p\">&amp;</span> <span class=\"m\">0xFF00U</span><span class=\"p\">)</span> <span class=\"p\">&gt;&gt;</span> <span class=\"m\">8</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<div class=\"language-vb highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">Private</span> <span class=\"k\">Sub</span> <span class=\"nf\">Form_Load</span><span class=\"p\">()</span>\n    <span class=\"c1\">' Execute a simple message box that says \"Hello, World!\"</span>\n    <span class=\"n\">MsgBox</span> <span class=\"s\">\"Hello, World!\"</span>\n<span class=\"k\">End</span> <span class=\"k\">Sub</span>\n</code></pre></div></div>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">fib</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>    <span class=\"c1\"># write Fibonacci series up to n\n</span>    <span class=\"s\">\"\"\"Print a Fibonacci series up to n.\"\"\"</span>\n    <span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span>\n    <span class=\"k\">while</span> <span class=\"n\">a</span> <span class=\"o\">&lt;</span> <span class=\"n\">n</span><span class=\"p\">:</span>\n        <span class=\"k\">print</span> <span class=\"n\">a</span><span class=\"p\">,</span>\n        <span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"n\">a</span><span class=\"o\">+</span><span class=\"n\">b</span>\n</code></pre></div></div>\n\n<div class=\"language-perl highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\">#!/usr/bin/env perl</span>\n<span class=\"k\">use</span> <span class=\"nv\">warnings</span><span class=\"p\">;</span>\n<span class=\"k\">print</span> <span class=\"p\">\"</span><span class=\"s2\">a: </span><span class=\"p\">\";</span>\n<span class=\"k\">my</span> <span class=\"nv\">$a</span> <span class=\"o\">=</span> <span class=\"p\">\"</span><span class=\"s2\">foo</span><span class=\"p\">\";</span>\n<span class=\"k\">print</span> <span class=\"nv\">$a</span><span class=\"p\">;</span>\n</code></pre></div></div>\n\n<div class=\"language-markdown highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>Markdown has cool <span class=\"p\">[</span><span class=\"nv\">reference links</span><span class=\"p\">][</span><span class=\"ss\">ref 1</span><span class=\"p\">]</span>\nand <span class=\"p\">[</span><span class=\"nv\">regular links too</span><span class=\"p\">](</span><span class=\"sx\">https://example.com</span><span class=\"p\">)</span>\n\n<span class=\"p\">[</span><span class=\"ss\">ref 1</span><span class=\"p\">]:</span> <span class=\"sx\">https://example.com</span>\n</code></pre></div></div>\n\n<div class=\"language-yaml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"pi\">-</span> <span class=\"na\">name</span><span class=\"pi\">:</span> <span class=\"s\">set PHP-FPM parameters</span>\n  <span class=\"na\">lineinfile</span><span class=\"pi\">:</span>\n    <span class=\"na\">dest</span><span class=\"pi\">:</span> <span class=\"s\">/etc/php-fpm.conf</span>\n    <span class=\"na\">regexp</span><span class=\"pi\">:</span> <span class=\"s2\">\"</span><span class=\"s\">^\"</span>\n    <span class=\"na\">insertafter</span><span class=\"pi\">:</span> <span class=\"s2\">\"</span><span class=\"s\">^;\"</span>\n    <span class=\"na\">line</span><span class=\"pi\">:</span> <span class=\"s2\">\"</span><span class=\"nv\"> </span><span class=\"s\">=</span><span class=\"nv\"> </span><span class=\"s\">\"</span>\n  <span class=\"na\">with_items</span><span class=\"pi\">:</span>\n    <span class=\"pi\">-</span> <span class=\"pi\">{</span> <span class=\"nv\">param</span><span class=\"pi\">:</span> <span class=\"s1\">'</span><span class=\"s\">error_log'</span><span class=\"pi\">,</span> <span class=\"nv\">value</span><span class=\"pi\">:</span> <span class=\"s1\">'</span><span class=\"s\">/var/log/php-fpm/error.log'</span> <span class=\"pi\">}</span>\n    <span class=\"pi\">-</span> <span class=\"pi\">{</span> <span class=\"nv\">param</span><span class=\"pi\">:</span> <span class=\"s1\">'</span><span class=\"s\">log_level'</span><span class=\"pi\">,</span> <span class=\"nv\">value</span><span class=\"pi\">:</span> <span class=\"s1\">'</span><span class=\"s\">error'</span> <span class=\"pi\">}</span>\n    <span class=\"pi\">-</span> <span class=\"pi\">{</span> <span class=\"nv\">param</span><span class=\"pi\">:</span> <span class=\"s1\">'</span><span class=\"s\">emergency_restart_threshold'</span><span class=\"pi\">,</span> <span class=\"nv\">value</span><span class=\"pi\">:</span> <span class=\"s1\">'</span><span class=\"s\">10'</span> <span class=\"pi\">}</span>\n</code></pre></div></div>",
      "excerpt": "Code highlighting demo, powered by Rouge. More info about code highlighting can be found at Jekyll’s documentation.",
      "languages": null,
      "categories": ["note"],
      "tags": ["miscellaneous"]
    }
    
  

  
    ,
    {
      "title": "Markdown Features Test",
      "permalink": "https://flxw.de/markdown-features-test.html",
      "link": "https://flxw.de/markdown-features-test.html",
      "date": "2014-06-06T00:00:00-07:00",
      
        "modified": "2022-10-22T06:05:10-07:00",
      
      "author": {
        "name": "Felix Wolff",
        "url": "https://flxw.de/",
        "email": "wolff.felix@proton.me"
      },
      "content": "<h2 id=\"indented-code-blocks\">Indented Code Blocks</h2>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>def show\n  @widget = Widget(params[:id])\n  respond_to do |format|\n    format.html # show.html.erb\n    format.json { render json: @widget }\n  end\nend\n</code></pre></div></div>\n\n<h2 id=\"liquid-tag-with-linenos-support\">Liquid Tag with <code class=\"language-plaintext highlighter-rouge\">linenos</code> Support</h2>\n\n<figure class=\"highlight\"><pre><code class=\"language-ruby\" data-lang=\"ruby\"><table class=\"rouge-table\"><tbody><tr><td class=\"gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n</pre></td><td class=\"code\"><pre><span class=\"k\">def</span> <span class=\"nf\">show</span>\n  <span class=\"vi\">@widget</span> <span class=\"o\">=</span> <span class=\"no\">Widget</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"p\">[</span><span class=\"ss\">:id</span><span class=\"p\">])</span>\n  <span class=\"n\">respond_to</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"nb\">format</span><span class=\"o\">|</span>\n    <span class=\"nb\">format</span><span class=\"p\">.</span><span class=\"nf\">html</span> <span class=\"c1\"># show.html.erb</span>\n    <span class=\"nb\">format</span><span class=\"p\">.</span><span class=\"nf\">json</span> <span class=\"p\">{</span> <span class=\"n\">render</span> <span class=\"ss\">json: </span><span class=\"vi\">@widget</span> <span class=\"p\">}</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n</pre></td></tr></tbody></table></code></pre></figure>\n\n<h2 id=\"gfm-code-blocks-fenced_code_blocks\">GFM Code Blocks (<code class=\"language-plaintext highlighter-rouge\">fenced_code_blocks</code>)</h2>\n\n<div class=\"language-css highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c\">/* Background color function */</span>\n<span class=\"nc\">.code-bg</span> <span class=\"o\">(</span><span class=\"k\">@v</span><span class=\"p\">)</span> <span class=\"n\">when</span> <span class=\"p\">(</span><span class=\"n\">lightness</span><span class=\"p\">(</span><span class=\"err\">@</span><span class=\"n\">v</span><span class=\"p\">)</span> <span class=\"err\">&gt;=</span> <span class=\"m\">50%</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"k\">@return-bg</span><span class=\"p\">:</span> <span class=\"nb\">mix</span><span class=\"p\">(</span><span class=\"m\">#000</span><span class=\"p\">,</span> <span class=\"n\">lighten</span><span class=\"p\">(</span><span class=\"err\">@</span><span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"m\">30%</span><span class=\"p\">),</span> <span class=\"m\">10%</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n<span class=\"nc\">.code-bg</span> <span class=\"o\">(</span><span class=\"k\">@v</span><span class=\"p\">)</span> <span class=\"n\">when</span> <span class=\"p\">(</span><span class=\"n\">lightness</span><span class=\"p\">(</span><span class=\"err\">@</span><span class=\"n\">v</span><span class=\"p\">)</span> <span class=\"err\">&lt;</span> <span class=\"m\">50%</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"k\">@return-bg</span><span class=\"p\">:</span> <span class=\"nb\">mix</span><span class=\"p\">(</span><span class=\"m\">#fff</span><span class=\"p\">,</span> <span class=\"n\">darken</span><span class=\"p\">(</span><span class=\"err\">@</span><span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"m\">10%</span><span class=\"p\">),</span> <span class=\"m\">70%</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<h3 id=\"smartypants\">SmartyPants</h3>\n\n<p>“Aha! What’s up, man?” – Jony said.</p>\n\n<h2 id=\"tables\">Tables</h2>\n\n<table>\n  <thead>\n    <tr>\n      <th>Name</th>\n      <th>Upvotes</th>\n      <th>Downvotes</th>\n      <th>Abstentions</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>Alice</td>\n      <td>10</td>\n      <td>11</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <td>Bob</td>\n      <td>4</td>\n      <td>3</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <td>Charlie</td>\n      <td>7</td>\n      <td>9</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <td>Totals</td>\n      <td>21</td>\n      <td>23</td>\n      <td>7</td>\n    </tr>\n  </tbody>\n</table>\n\n<h2 id=\"intra-emphasis\">Intra-emphasis</h2>\n\n<p>foo_bar_baz</p>\n\n<h2 id=\"auto-link\">Auto-link</h2>\n\n<p>https://sparanoid.com/</p>\n\n<h2 id=\"strikethroughs\">Strikethroughs</h2>\n\n<p>This is <del>good</del> bad.</p>\n\n<h2 id=\"space-after-headers\">Space after Headers</h2>\n\n<p>###This is not a header.</p>\n\n<h2 id=\"superscripts\">Superscripts</h2>\n\n<p>This is the 2^(nd) time.</p>\n\n<h2 id=\"footnotes\">Footnotes</h2>\n\n<p>This<sup id=\"fnref:1\" role=\"doc-noteref\"><a href=\"#fn:1\" class=\"footnote\" rel=\"footnote\">1</a></sup> is<sup id=\"fnref:2\" role=\"doc-noteref\"><a href=\"#fn:2\" class=\"footnote\" rel=\"footnote\">2</a></sup> a sentence<sup id=\"fnref:3\" role=\"doc-noteref\"><a href=\"#fn:3\" class=\"footnote\" rel=\"footnote\">3</a></sup>.</p>\n\n<h2 id=\"id-日本語タイトル\">ID 日本語タイトル</h2>\n\n<p>Expected id should be <code class=\"language-plaintext highlighter-rouge\">id-ri-ben-yu-taitoru</code>.</p>\n\n<h2 id=\"id-中文標題\">ID 中文標題</h2>\n\n<p>Expected id should be <code class=\"language-plaintext highlighter-rouge\">id-zhong-wen-biao-ti</code>.</p>\n\n<div class=\"footnotes\" role=\"doc-endnotes\">\n  <ol>\n    <li id=\"fn:1\" role=\"doc-endnote\">\n      <p>Lorem lean startup ipsum <strong>product market fit customer development</strong> acquihire technical cofounder. User engagement A/B testing shrink a market venture capital pitch deck. Social bookmarking group buying <a href=\"#\">crowded market</a> pivot onboarding freemium prototype ping pong. Early stage disruptive ecosystem community outreach dynamic location based strategic investor. <a href=\"#fnref:1\" class=\"reversefootnote\" role=\"doc-backlink\">&#8617;&#xfe0e;</a></p>\n    </li>\n    <li id=\"fn:2\" role=\"doc-endnote\">\n      <p><a href=\"https://web.archive.org/web/20160425094356/http://blog.readability.com:80/2012/06/announcement/\">An Important Announcement</a> by Richard Ziade at Readability <a href=\"#fnref:2\" class=\"reversefootnote\" role=\"doc-backlink\">&#8617;&#xfe0e;</a></p>\n    </li>\n    <li id=\"fn:3\" role=\"doc-endnote\">\n      <p>Good afterble constanoon, this sweet hongi is as bung as a stuffed morepork. Mean while, in the marae, Dr Ropata and Hairy Maclary from Donaldson’s Dairy were up to no good with a bunch of bloody troties. <a href=\"#fnref:3\" class=\"reversefootnote\" role=\"doc-backlink\">&#8617;&#xfe0e;</a></p>\n    </li>\n  </ol>\n</div>",
      "excerpt": "Indented Code Blocks",
      "languages": null,
      "categories": ["note"],
      "tags": ["miscellaneous"]
    }
    
  

  
    ,
    {
      "title": "Markup Example",
      "permalink": "https://flxw.de/markup-example.html",
      "link": "https://flxw.de/markup-example.html",
      "date": "2014-06-05T00:00:00-07:00",
      
        "modified": "2022-10-22T06:05:10-07:00",
      
      "author": {
        "name": "Felix Wolff",
        "url": "https://flxw.de/",
        "email": "wolff.felix@proton.me"
      },
      "content": "<p>Lorem lean startup ipsum <strong>product market fit customer development</strong> acquihire technical cofounder. User engagement A/B testing shrink a market venture capital pitch deck. Social bookmarking group buying <a href=\"#\">crowded market</a> pivot onboarding freemium prototype ping pong. Early stage disruptive ecosystem community outreach dynamic location based strategic investor.</p>\n\n<blockquote>\n  <p>Two days ago the Chinese website <a href=\"https://www.taobao.com/\">Taobao</a> held a discount promotion to celebrate what’s known as “double sticks day” in China. In a single 24hr period, they conducted 19bn RMB (US$3.06bn) of business.</p>\n  <footer>\n    <cite><a href=\"https://web.archive.org/web/20150223182728/http://westiseast.co.uk:80/blog/taobao-sales-19-billion-bonanza/\">Chris West</a></cite>\n  </footer>\n</blockquote>\n\n<blockquote>\n  <p>Curabitur blandit tempus porttitor. Nullam quis risus eget urna mollis ornare vel eu leo. Nullam id dolor id nibh ultricies vehicula ut id elit.</p>\n</blockquote>\n\n<p>Good afterble constanoon, this sweet hongi is as bung as a stuffed morepork. Mean while, in the marae, Dr Ropata and Hairy Maclary from Donaldson’s Dairy were up to no good with a bunch of bloody troties.</p>\n\n<h2 id=\"inline-html-elements\">Inline HTML elements</h2>\n\n<p>HTML defines a long list of available inline tags, a complete list of which can be found on the <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element\">Mozilla Developer Network</a>.</p>\n\n<ul>\n  <li><strong>To bold text</strong>, use <code class=\"language-plaintext highlighter-rouge\">&lt;strong&gt;</code>.</li>\n  <li><em>To italicize text</em>, use <code class=\"language-plaintext highlighter-rouge\">&lt;em&gt;</code>.</li>\n  <li>Abbreviations, like <abbr title=\"HyperText Markup Langage\">HTML</abbr> should use <code class=\"language-plaintext highlighter-rouge\">&lt;abbr&gt;</code>, with an optional <code class=\"language-plaintext highlighter-rouge\">title</code> attribute for the full phrase.</li>\n  <li>Citations, like <cite>— Tunghsiao Liu &amp; Mark otto</cite>, should use <code class=\"language-plaintext highlighter-rouge\">&lt;cite&gt;</code>.</li>\n  <li><del>Deleted</del> text should use <code class=\"language-plaintext highlighter-rouge\">&lt;del&gt;</code> and <ins>inserted</ins> text should use <code class=\"language-plaintext highlighter-rouge\">&lt;ins&gt;</code>.</li>\n  <li>Superscript <sup>text</sup> uses <code class=\"language-plaintext highlighter-rouge\">&lt;sup&gt;</code> and subscript <sub>text</sub> uses <code class=\"language-plaintext highlighter-rouge\">&lt;sub&gt;</code>.</li>\n</ul>\n\n<hr />\n\n<ul>\n  <li>With the exception of Nietzsche, no other madman has contributed so much to human sanity as has Louis Althusser. He is mentioned twice in the Encyclopaedia Britannica as someone’s teacher. There could be no greater lapse: for two important decades (the 60s and the 70s), Althusser was at the eye of all the important cultural storms. He fathered quite a few of them.</li>\n  <li>This newly-found obscurity forces me to summarize his work before suggesting a few (minor) modifications to it.\n    <ul>\n      <li>Society consists of practices: economic, political and ideological.\n        <ul>\n          <li>Althusser defines a practice as:</li>\n          <li>“Any process of transformation of a determinate product, affected by a determinate human labour, using determinate means (of production)”\n            <ul>\n              <li>The economic practice (the historically specific mode of production) transforms raw materials to finished products using human labour and other means of production, all organized within defined webs of inter-relations. The political practice does the same with social relations as the raw materials. Finally, ideology is the transformation of the way that a subject relates to his real life conditions of existence.\n                <ul>\n                  <li>This is a rejection of the mechanistic worldview (replete with bases and superstructures). It is a rejection of the Marxist theorization of ideology. It is a rejection of the Hegelian fascist “social totality”. It is a dynamic, revealing, modern day model.</li>\n                  <li>“The objective internal reference … the system of questions commanding the answers given”</li>\n                </ul>\n              </li>\n              <li>Subjects to what? The answer: to the material practices of the ideology. This (the creation of subjects) is done by the acts of “hailing” or “interpellation”. These are acts of attracting attention (hailing) , forcing the individuals to generate meaning (interpretation) and making them participate in the practice.\n                <ul>\n                  <li>Subjects to what? The answer: to the material practices of the ideology. This (the creation of subjects) is done by the acts of “hailing” or “interpellation”. These are acts of attracting attention (hailing) , forcing the individuals to generate meaning (interpretation) and making them participate in the practice.</li>\n                  <li>What happens in a pluralistic environment rich in competing ideologies?\n                    <ul>\n                      <li>Clarifying the HOW, though, does not shed light on the WHY.\n                        <ul>\n                          <li>is the fact that in the new one, the second text is articulated with the lapses in the first text … (Marx measures) the problematic contained</li>\n                        </ul>\n                      </li>\n                    </ul>\n                  </li>\n                </ul>\n              </li>\n              <li>Ideology is a practice with lived and material dimensions. It has costumes, rituals, behaviour patterns, ways of thinking. The State employs Ideological Apparatuses (ISAs) to reproduce ideology through practices and productions: (organized) religion, the education system, the family, (organized) politics, the media, the industries of culture.</li>\n            </ul>\n          </li>\n        </ul>\n      </li>\n    </ul>\n  </li>\n  <li>These theoretical tools were widely used to analyze the Advertising and the film industries.</li>\n</ul>\n\n<ol>\n  <li>Ordered list</li>\n  <li>Ordered list\n    <ol>\n      <li>Ordered list\n        <ol>\n          <li>Ordered list</li>\n          <li>Ordered list\n            <ol>\n              <li>Ordered list\n                <ol>\n                  <li>Ordered list</li>\n                  <li>Ordered list</li>\n                </ol>\n              </li>\n              <li>Ordered list\n                <ol>\n                  <li>Ordered list</li>\n                </ol>\n              </li>\n              <li>Ordered list</li>\n            </ol>\n          </li>\n        </ol>\n      </li>\n      <li>Ordered list\n        <ol>\n          <li>Ordered list</li>\n          <li>Ordered list</li>\n        </ol>\n      </li>\n    </ol>\n  </li>\n  <li>Ordered list</li>\n</ol>\n\n<hr />\n\n<h2 id=\"this-should-be-replaced\">“This should be replaced.”</h2>\n\n<p>“This should be replaced.”</p>\n\n<p>This is a normal paragraph.</p>\n\n<h2 id=\"this-should-be-replaced-1\">‘This should be replaced.’</h2>\n\n<p>‘This should be replaced.’</p>\n\n<p>This is a normal paragraph.</p>\n\n<h2 id=\"this-should-be-replaced-2\">「This should be replaced.」</h2>\n\n<p>「This should be replaced.」</p>\n\n<p>This is a normal paragraph.</p>\n\n<h2 id=\"this-should-be-replaced-3\">『This should be replaced.』</h2>\n\n<p>『This should be replaced.』</p>\n\n<p>This is a normal paragraph.</p>\n\n<h2 id=\"this-should-be-replaced-4\">（This should be replaced.）</h2>\n\n<p>（This should be replaced.）</p>\n\n<p>This is a normal paragraph.</p>\n\n<hr />\n\n<p>Most of these elements are styled by browsers with few modifications on our part.</p>\n\n<p>Maui and his rough as guts piece of pounamu, what a stink buzz. Bro, quater-acre patches are really naff good with bung mates, aye. You have no idea how beached as our random kais were aye. Every time I see those beautiful lengths of number 8 wire it’s like Castle Hill all over again aye, do you happen to have a bucket or a hose bro?</p>\n\n<h2 id=\"h2-headings\">H2 Headings</h2>\n\n<p>You have no idea how pretty suss our same same but different toasted sandwiches were aye. Every time I see those carked it keas it’s like the dairy all over again aye, you don’t know his story, bro. Anyway, Hairy Maclary from Donaldson’s Dairy is just Mrs Falani in disguise, to find the true meaning of life, one must start frying up with the hangi, mate. After the rugby ball is jumped the ditch, you add all the stink girl guide biscuits to the trotie you’ve got yourself a meal.</p>\n\n<h3 id=\"h3-headings\">H3 Headings</h3>\n\n<p>You have no idea how pretty suss our same same but different toasted sandwiches were aye. Every time I see those carked it keas it’s like the dairy all over again aye, you don’t know his story, bro. Anyway, Hairy Maclary from Donaldson’s Dairy is just Mrs Falani in disguise, to find the true meaning of life, one must start frying up with the hangi, mate. After the rugby ball is jumped the ditch, you add all the stink girl guide biscuits to the trotie you’ve got yourself a meal.</p>\n\n<h4 id=\"h4-headings\">H4 Headings</h4>\n\n<p>You have no idea how pretty suss our same same but different toasted sandwiches were aye. Every time I see those carked it keas it’s like the dairy all over again aye, you don’t know his story, bro. Anyway, Hairy Maclary from Donaldson’s Dairy is just Mrs Falani in disguise, to find the true meaning of life, one must start frying up with the hangi, mate. After the rugby ball is jumped the ditch, you add all the stink girl guide biscuits to the trotie you’ve got yourself a meal.</p>\n\n<h5 id=\"h5-headings\">H5 Headings</h5>\n\n<p>You have no idea how pretty suss our same same but different toasted sandwiches were aye. Every time I see those carked it keas it’s like the dairy all over again aye, you don’t know his story, bro. Anyway, Hairy Maclary from Donaldson’s Dairy is just Mrs Falani in disguise, to find the true meaning of life, one must start frying up with the hangi, mate. After the rugby ball is jumped the ditch, you add all the stink girl guide biscuits to the trotie you’ve got yourself a meal.</p>\n\n<h6 id=\"h6-headings\">H6 Headings</h6>\n\n<p>You have no idea how pretty suss our same same but different toasted sandwiches were aye. Every time I see those carked it keas it’s like the dairy all over again aye, you don’t know his story, bro. Anyway, Hairy Maclary from Donaldson’s Dairy is just Mrs Falani in disguise, to find the true meaning of life, one must start frying up with the hangi, mate. After the rugby ball is jumped the ditch, you add all the stink girl guide biscuits to the trotie you’ve got yourself a meal.</p>\n\n<hr />\n\n<p>He was alone then; when he sat in that same chair his wife now sits in, and I shared with him the positive result to his HIV test. Though he seemed disinterested, vaguely detached, he had obviously heard of HIV before. His chart from the local clinic indicated a previous history of and treatment for anal gonorrhea, two acute cases of syphilis in the past three years, and a urinary tract infection last month. His only listed sexual contact, his wife. Who, strangely enough, only tested positive for one of the syphilis infections.</p>\n\n<p>“Mistake, this! I am married, not a giver of ass.”</p>\n\n<p>Giver of ass? That’s one for the archive, I think.</p>\n\n<p>Unwilling to engage his obvious denials, I ignore the comment and instead explain that due to a higher than acceptable potential of a false positive result, we won’t consider his oral test as confirmatory until the more accurate blood analysis is in.</p>\n\n<p>“I no understand”, he says to the room in general.</p>\n\n<p>His annoyance is obvious. Abrasively, he offers me his exposed forearm. This, I assume, is my cue to draw his blood. Ignoring the indignant anger beginning to rise, I tighten my jaw, then swab the fat vein with betadine, working the cool, brown liquid off in concentric circles, using strong medicinal smelling alcohol. I use the betadine, as most of these men work in the mines, and dirt three layers thick on exposed skin is the norm. As the first tube in the vacationer fills with blood, he asks,</p>\n\n<p>“So how I get this thing?”</p>\n\n<p>Ah, I see we are going to play the circuitous dance of ignorance. Sounding just a little too clinical, I begin the HIV 101 mantra.</p>\n\n<p>“Well, people acquire HIV through certain types of sex with an infected person, through sharing needles with an infected person, and sometimes through a blood transfusion. Have you ever had a blood transfusion, sir?”</p>\n\n<p>I take the dismissive wave of his hand as a no to the transfusion question. I don’t make a great attempt to navigate a comfort zone here; instinct and experience telling me he has already set the script of what is to follow.</p>\n\n<p>“She is fucking other cocks my whore devil wife”?\nBingo! A narrative that over the next six weeks I will hear from several other men as well.</p>\n\n<p>“These whores, all they want is the cock!”\nCareful Skippy, you really aren’t as convincing as you think you are.</p>\n\n<blockquote>\n  <p>\n    “She is fucking other cocks my whore devil wife”?\n    <br />\n    Bingo! A narrative that over the next six weeks I will hear from several other men as well.\n  </p>\n\n  <p>\n    “These whores, all they want is the cock!”\n    <br />\n    Careful Skippy, you really aren’t as convincing as you think you are.\n  </p>\n\n  <footer>\n    <cite>from <a href=\"https://medium.com/absurdist/a-world-away-c2b692bd808e\">A World Away</a> by alto</cite>\n  </footer>\n</blockquote>\n\n<details>\n  <summary>Supported Fonts</summary>\n  <ul>\n    <li><a href=\"https://www.microsoft.com/typography/otspec/features_fj.htm#qwid\">Microsoft Registered features - qwid</a></li>\n    <li><a href=\"https://typekit.com/fonts/kozuka-mincho-pr6n\">Kozuka Mincho Pr6n</a></li>\n  </ul>\n</details>\n\n<h2 id=\"chinese-paragraph\">Chinese Paragraph</h2>\n\n<p lang=\"zh-cn\">「名词成灾」的流行病里，灾情最严重的该是所谓「科学至上」（scientism）。在现代的工业社会里，科学早成显贵，科技更是骄子，所以知识分子的口头与笔下，有意无意，总爱用一些「学术化」的抽象名词，好显得客观而精确。有人称之为「伪术语」（pseudo-jargon）。例如：明明是 first step，却要说成 initial phase：明明是 letter，却要说成 communication，都属此类。</p>\n\n<h2 id=\"japanese-paragraph\">Japanese Paragraph</h2>\n\n<p lang=\"ja\">『雪国』の主な舞台は、上越国境の清水トンネルを抜けた湯沢温泉であるが、この作品も『伊豆の踊子』同様に、川端康成の旅の出会いから生まれたもので、雪中の火事も実際に起ったことだと川端は語っている。川端は作品内で故意に地名を隠しているが、1934 年（昭和 9 年）6 月 13 日より 1937 年まで新潟県湯沢町の高半旅館（現：高半ホテル）に逗留していたことを随筆『「雪国」の旅』で述べている。</p>\n\n<div class=\"language-markdown highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"gu\">## H2 Heading</span>\n<span class=\"gu\">### H3 Heading</span>\n<span class=\"gu\">#### H4 Heading</span>\n<span class=\"gu\">##### H5 Heading</span>\n<span class=\"gu\">###### H6 Heading</span>\n</code></pre></div></div>\n\n<h2 id=\"newsletters-signup-form\">Newsletters Signup Form</h2>\n\n<form action=\"//sparanoid.us2.list-manage.com/subscribe/post?u=eef500b1fe3fe595f03a27605&amp;id=7bbabe95a9\" method=\"post\">\n  <input name=\"cm-uykhir-uykhir\" type=\"email\" placeholder=\"Your Email\" required=\"\" />\n</form>",
      "excerpt": "Lorem lean startup ipsum product market fit customer development acquihire technical cofounder. User engagement A/B testing shrink a market venture capital pitch deck. Social bookmarking group buying crowded market pivot onboarding freemium prototype ping pong. Early stage disruptive ecosystem community outreach dynamic location based strategic investor.",
      "languages": null,
      "categories": ["note"],
      "tags": ["miscellaneous"]
    }
    
  

  
    ,
    {
      "title": "Custom HTML Markups",
      "permalink": "https://flxw.de/custom-html-markups.html",
      "link": "https://flxw.de/custom-html-markups.html",
      "date": "2014-06-01T00:00:00-07:00",
      
        "modified": "2022-10-22T06:05:10-07:00",
      
      "author": {
        "name": "Felix Wolff",
        "url": "https://flxw.de/",
        "email": "wolff.felix@proton.me"
      },
      "content": "<h2 id=\"note-store-and-download\"><code class=\"language-plaintext highlighter-rouge\">.note</code>, <code class=\"language-plaintext highlighter-rouge\">.store</code>, and <code class=\"language-plaintext highlighter-rouge\">.download</code></h2>\n\n<p>A paragraph block with a thin border line.</p>\n\n<h3 id=\"usage\">Usage</h3>\n\n<div class=\"language-md highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">[</span><span class=\"nv\">Download</span><span class=\"p\">](</span><span class=\"sx\">download</span><span class=\"p\">)</span> it from GitHub\n{: .download}\n\nLove this plugin? please consider <span class=\"p\">[</span><span class=\"nv\">buying me a cup of coffee</span><span class=\"p\">](</span><span class=\"sx\">donate</span><span class=\"p\">)</span>.\n{: .store}\n</code></pre></div></div>\n\n<h3 id=\"example\">Example</h3>\n\n<p class=\"download\"><a href=\"https://github.com/sparanoid/sparanoid.com/\">Download</a> it from GitHub</p>\n\n<p class=\"store\">Love this plugin? please consider buying me a cup of coffee.</p>\n\n<h2 id=\"largetype\"><code class=\"language-plaintext highlighter-rouge\">.largetype</code></h2>\n\n<p>Make normal paragraph text large enough.</p>\n\n<h3 id=\"usage-1\">Usage</h3>\n\n<div class=\"language-md highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">[</span><span class=\"nv\">PayPal</span><span class=\"p\">](</span><span class=\"sx\">donate</span><span class=\"p\">)</span>\n{: .largetype}\n</code></pre></div></div>\n\n<h3 id=\"example-1\">Example</h3>\n\n<p class=\"largetype\"><a href=\"https://sparanoid.com/donate/\">PayPal</a></p>\n\n<h2 id=\"browser\"><code class=\"language-plaintext highlighter-rouge\">.browser</code></h2>\n\n<p>A simple browser frame using pure CSS.</p>\n\n<h3 id=\"usage-2\">Usage</h3>\n\n<div class=\"language-md highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">![</span><span class=\"nv\">Image</span><span class=\"p\">](</span><span class=\"sx\">https://sparanoid.com/logo.png</span><span class=\"p\">)</span>\n{: .browser}\n</code></pre></div></div>\n\n<h3 id=\"example-2\">Example</h3>\n\n<p class=\"browser\"><img src=\"https://d349cztnlupsuf.cloudfront.net/delicious.com.png\" alt=\"Delicious Preview\" class=\"no-lightense\" /></p>\n\n<h2 id=\"lightense-images\"><a href=\"https://sparanoid.com/work/lightense-images/\">Lightense Images</a></h2>\n\n<p>A simple library inspired by <a href=\"https://github.com/tholman\">Tim Holman</a> to view large images up close using simple mouse interaction, and the full screen.</p>\n\n<h3 id=\"usage-3\">Usage</h3>\n\n<p>Add the following setting to your post <a href=\"https://jekyllrb.com/docs/frontmatter/\">front-matter field</a>:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>plugin: lightense\n</code></pre></div></div>\n\n<p>Markdown markup:</p>\n\n<div class=\"language-md highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">![</span><span class=\"nv\">Image</span><span class=\"p\">](</span><span class=\"sx\">https://sparanoid.com/photo.jpg</span><span class=\"p\">)</span>\n</code></pre></div></div>\n\n<p>Lightense Images is activated globally by default, if you want to disable this effect for specific image, you can simply apply <code class=\"language-plaintext highlighter-rouge\">.no-lightense</code> CSS class to your image or <code class=\"language-plaintext highlighter-rouge\">&lt;img&gt;</code>:</p>\n\n<div class=\"language-md highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">![</span><span class=\"nv\">Image</span><span class=\"p\">](</span><span class=\"sx\">https://sparanoid.com/logo.png</span><span class=\"p\">)</span>{: .no-lightense}\n</code></pre></div></div>\n\n<p>Please note that if you’re using HTML markup, you should wrap your images into a <code class=\"language-plaintext highlighter-rouge\">&lt;p&gt;</code> container.</p>\n\n<h3 id=\"example-3\">Example</h3>\n\n<p><img src=\"https://d349cztnlupsuf.cloudfront.net/moonstruck-princess-ext-red.jpg\" alt=\"Moonstruck Princess Extended - Red\" /></p>\n\n<h2 id=\"image-sizes\">Image Sizes</h2>\n\n<p>There’re different size helpers for images. They’re available using the following CSS classes:</p>\n\n<h3 id=\"small-size\">Small Size</h3>\n\n<div class=\"language-md highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">![</span><span class=\"nv\">Image</span><span class=\"p\">](</span><span class=\"sx\">https://sparanoid.com/logo.png</span><span class=\"p\">)</span>{: .size-small}\n</code></pre></div></div>\n\n<p><img src=\"https://d349cztnlupsuf.cloudfront.net/moonstruck-princess-ext-orange.jpg\" alt=\"Moonstruck Princess Extended - orange\" class=\"size-small\" /></p>\n\n<h3 id=\"medium-size\">Medium Size</h3>\n\n<p>The medium size is the default size of images, so you don’t need additional CSS classes for it.</p>\n\n<div class=\"language-md highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">![</span><span class=\"nv\">Image</span><span class=\"p\">](</span><span class=\"sx\">https://sparanoid.com/logo.png</span><span class=\"p\">)</span>\n</code></pre></div></div>\n\n<p><img src=\"https://d349cztnlupsuf.cloudfront.net/moonstruck-princess-ext-yellow.jpg\" alt=\"Moonstruck Princess Extended - Yellow\" /></p>\n\n<h3 id=\"large-size\">Large Size</h3>\n\n<div class=\"language-md highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">![</span><span class=\"nv\">Image</span><span class=\"p\">](</span><span class=\"sx\">https://sparanoid.com/logo.png</span><span class=\"p\">)</span>{: .size-large}\n</code></pre></div></div>\n\n<p><img src=\"https://d349cztnlupsuf.cloudfront.net/moonstruck-princess-ext-green.jpg\" alt=\"Moonstruck Princess Extended - Green\" class=\"size-large\" /></p>\n\n<h3 id=\"aligned-images\">Aligned Images</h3>\n\n<div class=\"language-md highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">![</span><span class=\"nv\">Image</span><span class=\"p\">](</span><span class=\"sx\">https://sparanoid.com/logo.png</span><span class=\"p\">)</span>{: .size-left}\n\n<span class=\"p\">![</span><span class=\"nv\">Image</span><span class=\"p\">](</span><span class=\"sx\">https://sparanoid.com/logo.png</span><span class=\"p\">)</span>{: .size-right}\n</code></pre></div></div>\n\n<p><img src=\"https://d349cztnlupsuf.cloudfront.net/moonstruck-princess-ext-blue.jpg\" alt=\"Moonstruck Princess Extended - Blue\" class=\"size-left\" /></p>\n\n<p>Aligned images are smaller images beside the text, you can just apply <code class=\"language-plaintext highlighter-rouge\">.size-left</code> or <code class=\"language-plaintext highlighter-rouge\">.size-right</code> to your images and nothing special markup required. However, that aligned images will be responded to normal large size for small desktops or mobile devices.</p>\n\n<h3 id=\"small-images\">Small Images</h3>\n\n<p>Useful for images smaller than container width.</p>\n\n<div class=\"language-md highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">![</span><span class=\"nv\">Image</span><span class=\"p\">](</span><span class=\"sx\">https://sparanoid.com/logo.png</span><span class=\"p\">)</span>{: .no-resize}\n</code></pre></div></div>\n\n<p><img src=\"https://d349cztnlupsuf.cloudfront.net/who-can-run.png\" alt=\"Run?\" class=\"no-resize\" /></p>\n\n<h3 id=\"small-images-center\">Small Images (center)</h3>\n\n<div class=\"language-md highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">![</span><span class=\"nv\">Image</span><span class=\"p\">](</span><span class=\"sx\">https://sparanoid.com/logo.png</span><span class=\"p\">)</span>{: .no-resize.center}\n</code></pre></div></div>\n\n<p><img src=\"https://d349cztnlupsuf.cloudfront.net/who-can-run.png\" alt=\"Run?\" class=\"no-resize center\" /></p>",
      "excerpt": ".note, .store, and .download",
      "languages": null,
      "categories": ["note"],
      "tags": ["curtana"]
    }
    
  

  
    ,
    {
      "title": "How to boot Windows 7+ installation from USB",
      "permalink": "https://flxw.de/install-windows-7+-from-usb.html",
      "link": "https://flxw.de/install-windows-7+-from-usb.html",
      "date": "2014-05-27T00:00:00-07:00",
      
        "modified": "2022-10-22T06:05:10-07:00",
      
      "author": {
        "name": "Felix Wolff",
        "url": "https://flxw.de/",
        "email": "wolff.felix@proton.me"
      },
      "content": "<p>Everytime I try to install Windows from a USB stick, I forget a simple step\nin making the stick bootable and another few minutes are wasted searching for the solution.\nThis is just a short note on how to get your USB-Stick set up for installing Windows from it.</p>\n\n<p>Read these few lines to save yourself some time:</p>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>fdisk /dev/sdb\n<span class=\"c\"># create a single new partition taking all the space on the stick</span>\n<span class=\"c\"># make it of type 7 (Windows/NTFS) and set its bootable flag</span>\nmkfs.ntfs <span class=\"nt\">-f</span> /dev/sdb1\nms-sys <span class=\"nt\">-7</span> /dev/sdb\n<span class=\"nb\">mkdir</span> /tmp/winiso\nmount <span class=\"nt\">-o</span> loop winimage.iso /tmp/winiso\nmount /dev/sdb1 /mnt/usb1\n<span class=\"nb\">cp</span> <span class=\"nt\">-rav</span> /tmp/winiso/<span class=\"k\">*</span> /mnt/usb1\n</code></pre></div></div>\n\n<p>In case you do not have <em>ms-sys</em> installed, you can get it from <a href=\"http://ms-sys.sourceforge.net/\">here</a>.</p>",
      "excerpt": "Everytime I try to install Windows from a USB stick, I forget a simple step\nin making the stick bootable and another few minutes are wasted searching for the solution.\nThis is just a short note on how to get your USB-Stick set up for installing Windows from it.",
      "languages": null,
      "categories": ["blog"],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "Using a colorful terminal",
      "permalink": "https://flxw.de/color-your-term.html",
      "link": "https://flxw.de/color-your-term.html",
      "date": "2014-05-05T00:00:00-07:00",
      
        "modified": "2022-10-22T06:05:10-07:00",
      
      "author": {
        "name": "Felix Wolff",
        "url": "https://flxw.de/",
        "email": "wolff.felix@proton.me"
      },
      "content": "<p>An appeal to everyone to use colored terminals\nand do their eyes a favor.</p>\n\n<p>Computer scientists do get their hands dirty - <em>true</em></p>\n\n<p>Computer scientists do use tools that probably only a small fraction\nof the Internet users has ever heard of - <em>true</em></p>\n\n<p>But so do car  mechanics and just about every other engineer on this world.\nAnd everyone of them is trying to use the best tools available to them,\nor keep them in the best state possible.</p>\n\n<p>As the german saying goes - <em>an engineer is only as good as his tools</em></p>\n\n<p>So why are a lot of hackers still using <strong>black-and-white</strong> terminals?\nEmacs? Software from the 80s? Look at the time to which shells date back!</p>\n\n<!-- A lot of concepts from the past are so tweaked by now that they *cry* for an overhaul! -->\n\n<h2 id=\"do-yourself-a-favor-and-check-out-color-schemes\">do yourself a favor and check out color schemes</h2>\n<p>Your terminal emulator should be able to do more than black text on a white background.\nCheck out the list of color schemes below. I have tried them all over time and found them\nto be more or less useful. Currently I am using <em>solarized</em>:</p>\n\n<ul>\n  <li><a href=\"http://slinky.imukuppi.org/zenburn/\">zenburn</a></li>\n  <li><a href=\"http://ethanschoonover.com/solarized\">solarized</a></li>\n  <li><a href=\"https://github.com/w0ng/vim-hybrid\">hybrid.vim</a></li>\n  <li><a href=\"https://github.com/ChrisKempson/Tomorrow-Theme\">TomorrowNightEighties</a></li>\n  <li><a href=\"http://color.smyck.org/\">Smyck</a></li>\n</ul>\n\n<h2 id=\"use-a-shell-that-works-with-you\">use a shell that works with you</h2>\n<p>You use your shell daily. There are dozens of shells superior to bash\nout there. <em>Use them</em>.</p>\n\n<p>Over the past, I have tested <a href=\"http://zsh.org\">zsh</a> and <a href=\"http://fishshell.com\">fish</a>.\nThe first allows you to get up to speed fairly quickly (in part due to the great documentation),\nbut the completion and directory naviagtion functionality is limited. I have come to love zsh for these features.\nWhile its configuration looks like hell, it is very fast and powerful.</p>\n\n<p>The zsh community has begun the trend of the <em>Oh My Shell</em> configuration collections.\nThey exist for both shells and allow you to get up to speed very quickly:</p>\n\n<ul>\n  <li><a href=\"https://github.com/robbyrussell/oh-my-zsh\">Oh My Zsh</a></li>\n  <li><a href=\"https://github.com/bpinto/oh-my-fish\">Oh My Fish</a></li>\n</ul>\n\n<h2 id=\"help-making-things-beautiful\">help making things beautiful</h2>\n<p>While these things certainly improve the current situation, new tools ought to be made.\nThere are lots of beautiful ideas out there, for improving terminals or shells.</p>\n\n<p>An idea I fancy especially is <a href=\"http://finalterm.org/\">FinalTerm</a></p>\n\n<p>Either way, everybody loves beautiful tools. So if you have an idea to improve,\nor build an entirely new one - don’t hesitate! The worst thing that might happen is you learning something ;-)</p>",
      "excerpt": "An appeal to everyone to use colored terminals\nand do their eyes a favor.",
      "languages": null,
      "categories": ["blog"],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "Custom Color Scheme",
      "permalink": "https://flxw.de/custom-color-scheme.html",
      "link": "https://flxw.de/custom-color-scheme.html",
      "date": "2014-05-01T00:00:00-07:00",
      
        "modified": "2022-10-22T06:05:10-07:00",
      
      "author": {
        "name": "Felix Wolff",
        "url": "https://flxw.de/",
        "email": "wolff.felix@proton.me"
      },
      "content": "<p>This is an example how to change your post color scheme for specific posts. You can simply add the following variables to your post <a href=\"https://jekyllrb.com/docs/frontmatter/\">front-matter field</a>:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>scheme-text: \"#0029ff\"\nscheme-link: \"#ff00b4\"\nscheme-hover: \"#ff00b4\"\nscheme-code: \"#ad00ff\"\nscheme-bg: \"#00ebff\"\nscheme-hero-text: \"#00ebff\"\nscheme-hero-link: \"#00ebff\"\nscheme-hero-bg: \"#0029ff\"\n</code></pre></div></div>\n\n<p>You can also ignore other variables if you only want to change the background:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>scheme-bg: \"#00ebff\"\n</code></pre></div></div>",
      "excerpt": "This is an example how to change your post color scheme for specific posts. You can simply add the following variables to your post front-matter field:",
      "languages": null,
      "categories": ["note"],
      "tags": ["curtana"]
    }
    
  

  
    ,
    {
      "title": "Unique Post Styling via Custom CSS",
      "permalink": "https://flxw.de/custom-css.html",
      "link": "https://flxw.de/custom-css.html",
      "date": "2014-04-01T00:00:00-07:00",
      
        "modified": "2022-10-22T06:05:10-07:00",
      
      "author": {
        "name": "Felix Wolff",
        "url": "https://flxw.de/",
        "email": "wolff.felix@proton.me"
      },
      "content": "<p>This is an example how to change your post styling via CSS. You can simply add the <code class=\"language-plaintext highlighter-rouge\">css</code> option to your post <a href=\"https://jekyllrb.com/docs/frontmatter/\">front-matter field</a>:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>scheme-text: \"#000\"\nscheme-link: \"#a73300\"\nscheme-hover: \"#ff4e00\"\nscheme-code: \"#a73300\"\ncss: |\n  body {\n    background-image: linear-gradient(to bottom, #fff500, #ff8f00);\n  }\n</code></pre></div></div>\n\n<p>Please note that syntax highlighting may look ugly with the custom background color.</p>",
      "excerpt": "This is an example how to change your post styling via CSS. You can simply add the css option to your post front-matter field:",
      "languages": null,
      "categories": ["note"],
      "tags": ["curtana"]
    }
    
  

  

  
    ,
    {
      "title": "External Link Post",
      "permalink": "https://flxw.de/external-link-post.html",
      "link": "https://flxw.de/external-link-post.html",
      "date": "2014-02-01T00:00:00-08:00",
      
        "modified": "2022-10-22T06:05:10-07:00",
      
      "author": {
        "name": "Felix Wolff",
        "url": "https://flxw.de/",
        "email": "wolff.felix@proton.me"
      },
      "content": "<p>This is an example of a Tumblr-like external link post. You can simply add the following setting to your post <a href=\"https://jekyllrb.com/docs/frontmatter/\">front-matter field</a>:</p>\n\n<div class=\"language-yaml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"na\">link</span><span class=\"pi\">:</span> <span class=\"s\">https://sparanoid.com/</span>\n</code></pre></div></div>",
      "excerpt": "This is an example of a Tumblr-like external link post. You can simply add the following setting to your post front-matter field:",
      "languages": null,
      "categories": ["note"],
      "tags": ["curtana"]
    }
    
  

  
    ,
    {
      "title": "Custom Heading Image",
      "permalink": "https://flxw.de/custom-heading-image.html",
      "link": "https://flxw.de/custom-heading-image.html",
      "date": "2014-02-01T00:00:00-08:00",
      
        "modified": "2022-10-22T06:05:10-07:00",
      
      "author": {
        "name": "Felix Wolff",
        "url": "https://flxw.de/",
        "email": "wolff.felix@proton.me"
      },
      "content": "<p>This is an example of custom post heading image. You can simply add the following setting to your post <a href=\"https://jekyllrb.com/docs/frontmatter/\">front-matter field</a>:</p>\n\n<div class=\"language-yaml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"na\">heading-img</span><span class=\"pi\">:</span> <span class=\"s\">svg/heading-image.svg</span>\n<span class=\"na\">heading-img-local</span><span class=\"pi\">:</span> <span class=\"no\">true</span>\n<span class=\"na\">heading-img-width</span><span class=\"pi\">:</span> <span class=\"m\">400</span>\n</code></pre></div></div>\n\n<blockquote>\n  <p>In Almace Scaffolding v1.1.0, the original <code class=\"language-plaintext highlighter-rouge\">svg-headline*</code>, and <code class=\"language-plaintext highlighter-rouge\">img-headline*</code> options are deprecated.</p>\n</blockquote>\n\n<dl>\n  <dt><code class=\"language-plaintext highlighter-rouge\">heading-img</code></dt>\n  <dd>Heading image filename, if a relative URL (non-external URL) is provided, the file will be prefixed with <code class=\"language-plaintext highlighter-rouge\">site.file</code>.</dd>\n  <dt><code class=\"language-plaintext highlighter-rouge\">heading-img-local</code></dt>\n  <dd>To avoid relative URL prefixed by <code class=\"language-plaintext highlighter-rouge\">site.file</code>, you can set this option to <code class=\"language-plaintext highlighter-rouge\">true</code> to prefix it with <code class=\"language-plaintext highlighter-rouge\">amsf_user_assets</code>, then you can store your images in <code class=\"language-plaintext highlighter-rouge\">_app/assets/</code>.</dd>\n  <dt><code class=\"language-plaintext highlighter-rouge\">heading-img-width</code></dt>\n  <dd>Set the width of your heading image. The value will be converted to viewport unit automatically. ie. <code class=\"language-plaintext highlighter-rouge\">heading-img-width: 400</code> will be converted to <code class=\"language-plaintext highlighter-rouge\">width: 40vw</code>;</dd>\n</dl>\n\n<blockquote>\n  <p><strong>Pro Tips</strong>: Keep a <code class=\"language-plaintext highlighter-rouge\">&lt;title&gt;</code> tag for your SVG can help Safari generate correct post title for its Reader mode:</p>\n</blockquote>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;svg</span> <span class=\"na\">xmlns=</span><span class=\"s\">\"http://www.w3.org/2000/svg\"</span><span class=\"nt\">&gt;</span>\n<span class=\"nt\">&lt;title&gt;</span>Cool Article<span class=\"nt\">&lt;/title&gt;</span>\n…\n</code></pre></div></div>",
      "excerpt": "This is an example of custom post heading image. You can simply add the following setting to your post front-matter field:",
      "languages": null,
      "categories": ["note"],
      "tags": ["curtana"]
    }
    
  

  
    ,
    {
      "title": "Custom Heading Background",
      "permalink": "https://flxw.de/custom-heading-background.html",
      "link": "https://flxw.de/custom-heading-background.html",
      "date": "2014-02-01T00:00:00-08:00",
      
        "modified": "2022-10-22T06:05:10-07:00",
      
      "author": {
        "name": "Felix Wolff",
        "url": "https://flxw.de/",
        "email": "wolff.felix@proton.me"
      },
      "content": "<p>This is an example of custom heading background. You can simply add the following setting to your post <a href=\"https://jekyllrb.com/docs/frontmatter/\">front-matter field</a>:</p>\n\n<div class=\"language-yaml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"na\">heading-bg</span><span class=\"pi\">:</span> <span class=\"s\">img/heading-background.jpg</span>\n<span class=\"na\">heading-bg-local</span><span class=\"pi\">:</span> <span class=\"no\">true</span>\n<span class=\"na\">heading-bg-color</span><span class=\"pi\">:</span> <span class=\"s2\">\"</span><span class=\"s\">#8141b1\"</span>\n<span class=\"na\">heading-bg-size</span><span class=\"pi\">:</span> <span class=\"s2\">\"</span><span class=\"s\">100px</span><span class=\"nv\"> </span><span class=\"s\">100px\"</span>\n<span class=\"na\">heading-bg-position</span><span class=\"pi\">:</span> <span class=\"s2\">\"</span><span class=\"s\">center</span><span class=\"nv\"> </span><span class=\"s\">bottom\"</span>\n<span class=\"na\">heading-bg-repeat</span><span class=\"pi\">:</span> <span class=\"s2\">\"</span><span class=\"s\">repeat\"</span>\n<span class=\"na\">heading-bg-text</span><span class=\"pi\">:</span> <span class=\"s2\">\"</span><span class=\"s\">#fff\"</span>\n</code></pre></div></div>\n\n<dl>\n  <dt><code class=\"language-plaintext highlighter-rouge\">heading-bg</code></dt>\n  <dd>Background image filename, if a relative URL (non-external URL) is provided, the file will be prefixed with <code class=\"language-plaintext highlighter-rouge\">site.file</code>.</dd>\n  <dt><code class=\"language-plaintext highlighter-rouge\">heading-bg-local</code></dt>\n  <dd>To avoid relative URL prefixed by <code class=\"language-plaintext highlighter-rouge\">site.file</code>, you can set this option to <code class=\"language-plaintext highlighter-rouge\">true</code> to prefix it with <code class=\"language-plaintext highlighter-rouge\">amsf_user_assets</code>, then you can store your images in <code class=\"language-plaintext highlighter-rouge\">_app/assets/</code>.</dd>\n  <dt><code class=\"language-plaintext highlighter-rouge\">heading-bg-color</code></dt>\n  <dd>Background color, recommend setting its value matches your image color tone.</dd>\n  <dt><code class=\"language-plaintext highlighter-rouge\">heading-bg-size</code></dt>\n  <dd>Background size, default value is <code class=\"language-plaintext highlighter-rouge\">cover</code>.</dd>\n  <dt><code class=\"language-plaintext highlighter-rouge\">heading-bg-position</code></dt>\n  <dd>Background position, default value is <code class=\"language-plaintext highlighter-rouge\">center center</code>.</dd>\n  <dt><code class=\"language-plaintext highlighter-rouge\">heading-bg-repeat</code></dt>\n  <dd>Background repeat, default value is <code class=\"language-plaintext highlighter-rouge\">no-repeat</code>.</dd>\n  <dt><code class=\"language-plaintext highlighter-rouge\">heading-bg-text</code></dt>\n  <dd>Text color of the heading, set it based on your background image.</dd>\n</dl>\n\n<blockquote>\n  <p>Heading image copyright info:\n© 士郎正宗・Production I.G／講談社・「攻殻機動隊」製作委員会</p>\n</blockquote>",
      "excerpt": "This is an example of custom heading background. You can simply add the following setting to your post front-matter field:",
      "languages": null,
      "categories": ["note"],
      "tags": ["curtana"]
    }
    
  

  
    ,
    {
      "title": "GitHub Pages Setup Guide",
      "permalink": "https://flxw.de/github-pages-setup.html",
      "link": "https://flxw.de/github-pages-setup.html",
      "date": "2014-01-01T00:00:00-08:00",
      
        "modified": "2022-10-22T06:05:10-07:00",
      
      "author": {
        "name": "Felix Wolff",
        "url": "https://flxw.de/",
        "email": "wolff.felix@proton.me"
      },
      "content": "<h2 id=\"the-problem\">The Problem</h2>\n\n<p>In short answer: yes, but additional actions required.</p>\n\n<p>tl;dr: You can serve AMSF as a static site on GitHub Pages, but not a Jekyll site using Jekyll renderer provided by GitHub Pages.</p>\n\n<p>There’re some factors that prevent it from generating pages using GitHub Pages renderer:</p>\n\n<ul>\n  <li>Many features Almace Scaffolding provides like LiveReload, Sass support, inline SVG, and HTML minification are implemented using <a href=\"https://gruntjs.com/\">Grunt.js</a>, it’s not supported by GitHub Pages.</li>\n  <li>Almace Scaffolding uses the latest pre-release Jekyll, so not all features are supported by GitHub Pages renderers.</li>\n  <li>GItHub Pages build server <a href=\"https://help.github.com/articles/pages-don-t-build-unable-to-run-jekyll#source-setting\">overwrites the <code class=\"language-plaintext highlighter-rouge\">source</code> settings</a>. This prevents it from generating pages from current file structure.</li>\n</ul>\n\n<h2 id=\"the-solution-for-users-or-organization-sites\">The Solution for Users or Organization Sites</h2>\n\n<p>Since GitHub Pages for users or organization sites can only be served from the root directory of your master branch. You have to:</p>\n\n<ul>\n  <li>Make sure your <code class=\"language-plaintext highlighter-rouge\">baseurl</code> is set to <code class=\"language-plaintext highlighter-rouge\">\"\"</code> (empty) in your <code class=\"language-plaintext highlighter-rouge\">_config.yml</code>.</li>\n  <li>Build your site locally (<code class=\"language-plaintext highlighter-rouge\">grunt build</code>).</li>\n  <li>Use your own method, create a script, bash, whatever it works to move the generated pages to the root directory of your repository.</li>\n  <li>Upload Jekyll generated static files to your <code class=\"language-plaintext highlighter-rouge\">username.github.io</code> repository.</li>\n</ul>\n\n<p>If you’d like to keep all things under Git control, you can try the following file structure:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>├── _amsf/ (Almace Scaffolding source code)\n├── *.html (Jekyll-generated static pages)\n└── README.md (your own readme)\n</code></pre></div></div>\n\n<p>You can see this <a href=\"https://github.com/amsf/amsf.github.io/\">live demo</a> how it actually works.</p>\n\n<h2 id=\"the-solution-for-project-sites\">The Solution for Project Sites</h2>\n\n<p>Things can be simpler if you need AMSF for your project sites since GitHub Pages supports serve your site from a subdirectory:</p>\n\n<ul>\n  <li>Make the following changes in your <code class=\"language-plaintext highlighter-rouge\">_config.yml</code>:\n    <ul>\n      <li>Change <code class=\"language-plaintext highlighter-rouge\">destination</code> to <code class=\"language-plaintext highlighter-rouge\">docs</code></li>\n      <li>Change <code class=\"language-plaintext highlighter-rouge\">baseurl</code> to the name of your repository slug, ie. <code class=\"language-plaintext highlighter-rouge\">/my-project</code>.</li>\n      <li>Change <code class=\"language-plaintext highlighter-rouge\">flatten_base</code> to <code class=\"language-plaintext highlighter-rouge\">true</code>.</li>\n    </ul>\n  </li>\n  <li>Build your site locally (<code class=\"language-plaintext highlighter-rouge\">grunt build</code>).</li>\n  <li>Push changes to GitHub</li>\n</ul>",
      "excerpt": "The Problem",
      "languages": null,
      "categories": ["note"],
      "tags": ["deployment"]
    }
    
  


]
